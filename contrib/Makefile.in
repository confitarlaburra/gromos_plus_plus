# Makefile.in generated by automake 1.14.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = aggregates$(EXEEXT) rottemp$(EXEEXT) ener_rplc$(EXEEXT) \
	espmap$(EXEEXT) lb_top$(EXEEXT) m_ener$(EXEEXT) \
	prep_bb$(EXEEXT) cg_potential$(EXEEXT) countbb$(EXEEXT) \
	dipole_pot$(EXEEXT) stacking$(EXEEXT) shake$(EXEEXT) \
	model$(EXEEXT) gca_ener$(EXEEXT) renumber$(EXEEXT) \
	distmat$(EXEEXT) iwdcf$(EXEEXT) bb2tex$(EXEEXT) \
	crossdih_top$(EXEEXT) saltbridge$(EXEEXT) bilayer_gel$(EXEEXT) \
	make_rdc_spec$(EXEEXT) fit_rdc$(EXEEXT) add_atom$(EXEEXT) \
	top_to_build$(EXEEXT) helix_axis$(EXEEXT) \
	gromacs2gromos$(EXEEXT) diff_top$(EXEEXT) \
	matrix_overlap$(EXEEXT) grid_dens$(EXEEXT) pdb2seq$(EXEEXT) \
	nscatt$(EXEEXT) structal$(EXEEXT) cgLJpot$(EXEEXT) \
	hvap$(EXEEXT) depsi2native$(EXEEXT) rep_rewrite$(EXEEXT) \
	local_comp$(EXEEXT) prep_hybrid$(EXEEXT) sasa_new$(EXEEXT) \
	ener_test$(EXEEXT) force$(EXEEXT) mut_top$(EXEEXT) \
	temperature$(EXEEXT) gatherNT$(EXEEXT) pore_loading$(EXEEXT) \
	gatherNT$(EXEEXT) pore_ads$(EXEEXT) pore_ax_rad$(EXEEXT) \
	pore_pf$(EXEEXT) pore_pf_multi$(EXEEXT) pore_diffus$(EXEEXT) \
	pore_P1$(EXEEXT) pore_Pcorr$(EXEEXT) pore_rates$(EXEEXT) \
	pore_dist_corr$(EXEEXT) pore_surv_P$(EXEEXT) \
	pore_hsolv$(EXEEXT) graphite$(EXEEXT) pore_rot_rel$(EXEEXT) \
	dipole_corr$(EXEEXT) Kinetic_MC$(EXEEXT)
subdir = contrib
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/config/depcomp
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/VERSION \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_Kinetic_MC_OBJECTS = Kinetic_MC.$(OBJEXT)
Kinetic_MC_OBJECTS = $(am_Kinetic_MC_OBJECTS)
Kinetic_MC_LDADD = $(LDADD)
Kinetic_MC_DEPENDENCIES = $(top_builddir)/src/libgromos.la
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
am_add_atom_OBJECTS = add_atom.$(OBJEXT)
add_atom_OBJECTS = $(am_add_atom_OBJECTS)
add_atom_LDADD = $(LDADD)
add_atom_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_aggregates_OBJECTS = aggregates.$(OBJEXT)
aggregates_OBJECTS = $(am_aggregates_OBJECTS)
aggregates_LDADD = $(LDADD)
aggregates_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_bb2tex_OBJECTS = bb2tex.$(OBJEXT)
bb2tex_OBJECTS = $(am_bb2tex_OBJECTS)
bb2tex_LDADD = $(LDADD)
bb2tex_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_bilayer_gel_OBJECTS = bilayer_gel.$(OBJEXT)
bilayer_gel_OBJECTS = $(am_bilayer_gel_OBJECTS)
bilayer_gel_LDADD = $(LDADD)
bilayer_gel_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_cgLJpot_OBJECTS = cgLJpot.$(OBJEXT)
cgLJpot_OBJECTS = $(am_cgLJpot_OBJECTS)
cgLJpot_LDADD = $(LDADD)
cgLJpot_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_cg_potential_OBJECTS = cg_potential.$(OBJEXT)
cg_potential_OBJECTS = $(am_cg_potential_OBJECTS)
cg_potential_LDADD = $(LDADD)
cg_potential_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_countbb_OBJECTS = countbb.$(OBJEXT)
countbb_OBJECTS = $(am_countbb_OBJECTS)
countbb_LDADD = $(LDADD)
countbb_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_crossdih_top_OBJECTS = crossdih_top.$(OBJEXT)
crossdih_top_OBJECTS = $(am_crossdih_top_OBJECTS)
crossdih_top_LDADD = $(LDADD)
crossdih_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_depsi2native_OBJECTS = depsi2native.$(OBJEXT)
depsi2native_OBJECTS = $(am_depsi2native_OBJECTS)
depsi2native_LDADD = $(LDADD)
depsi2native_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_diff_top_OBJECTS = diff_top.$(OBJEXT)
diff_top_OBJECTS = $(am_diff_top_OBJECTS)
diff_top_LDADD = $(LDADD)
diff_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_dipole_corr_OBJECTS = dipole_corr.$(OBJEXT)
dipole_corr_OBJECTS = $(am_dipole_corr_OBJECTS)
dipole_corr_LDADD = $(LDADD)
dipole_corr_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_dipole_pot_OBJECTS = dipole_pot.$(OBJEXT)
dipole_pot_OBJECTS = $(am_dipole_pot_OBJECTS)
dipole_pot_LDADD = $(LDADD)
dipole_pot_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_distmat_OBJECTS = distmat.$(OBJEXT)
distmat_OBJECTS = $(am_distmat_OBJECTS)
distmat_LDADD = $(LDADD)
distmat_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_ener_rplc_OBJECTS = ener_rplc.$(OBJEXT)
ener_rplc_OBJECTS = $(am_ener_rplc_OBJECTS)
ener_rplc_LDADD = $(LDADD)
ener_rplc_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_ener_test_OBJECTS = ener_test.$(OBJEXT)
ener_test_OBJECTS = $(am_ener_test_OBJECTS)
ener_test_LDADD = $(LDADD)
ener_test_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_espmap_OBJECTS = espmap.$(OBJEXT)
espmap_OBJECTS = $(am_espmap_OBJECTS)
espmap_LDADD = $(LDADD)
espmap_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_fit_rdc_OBJECTS = fit_rdc.$(OBJEXT)
fit_rdc_OBJECTS = $(am_fit_rdc_OBJECTS)
fit_rdc_LDADD = $(LDADD)
fit_rdc_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_force_OBJECTS = force.$(OBJEXT)
force_OBJECTS = $(am_force_OBJECTS)
force_LDADD = $(LDADD)
force_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_gatherNT_OBJECTS = gatherNT.$(OBJEXT)
gatherNT_OBJECTS = $(am_gatherNT_OBJECTS)
gatherNT_LDADD = $(LDADD)
gatherNT_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_gca_ener_OBJECTS = gca_ener.$(OBJEXT)
gca_ener_OBJECTS = $(am_gca_ener_OBJECTS)
gca_ener_LDADD = $(LDADD)
gca_ener_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_graphite_OBJECTS = graphite.$(OBJEXT)
graphite_OBJECTS = $(am_graphite_OBJECTS)
graphite_LDADD = $(LDADD)
graphite_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_grid_dens_OBJECTS = grid_dens.$(OBJEXT)
grid_dens_OBJECTS = $(am_grid_dens_OBJECTS)
grid_dens_LDADD = $(LDADD)
grid_dens_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_gromacs2gromos_OBJECTS = gromacs2gromos.$(OBJEXT)
gromacs2gromos_OBJECTS = $(am_gromacs2gromos_OBJECTS)
am__DEPENDENCIES_1 =
gromacs2gromos_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
gromacs2gromos_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(gromacs2gromos_LDFLAGS) \
	$(LDFLAGS) -o $@
am_helix_axis_OBJECTS = helix_axis.$(OBJEXT)
helix_axis_OBJECTS = $(am_helix_axis_OBJECTS)
helix_axis_LDADD = $(LDADD)
helix_axis_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_hvap_OBJECTS = hvap.$(OBJEXT)
hvap_OBJECTS = $(am_hvap_OBJECTS)
hvap_LDADD = $(LDADD)
hvap_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_iwdcf_OBJECTS = iwdcf.$(OBJEXT)
iwdcf_OBJECTS = $(am_iwdcf_OBJECTS)
iwdcf_LDADD = $(LDADD)
iwdcf_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_lb_top_OBJECTS = lb_top.$(OBJEXT)
lb_top_OBJECTS = $(am_lb_top_OBJECTS)
lb_top_LDADD = $(LDADD)
lb_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_local_comp_OBJECTS = local_comp.$(OBJEXT)
local_comp_OBJECTS = $(am_local_comp_OBJECTS)
local_comp_LDADD = $(LDADD)
local_comp_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_m_ener_OBJECTS = m_ener.$(OBJEXT)
m_ener_OBJECTS = $(am_m_ener_OBJECTS)
m_ener_LDADD = $(LDADD)
m_ener_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_make_rdc_spec_OBJECTS = make_rdc_spec.$(OBJEXT)
make_rdc_spec_OBJECTS = $(am_make_rdc_spec_OBJECTS)
make_rdc_spec_LDADD = $(LDADD)
make_rdc_spec_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_matrix_overlap_OBJECTS = matrix_overlap.$(OBJEXT)
matrix_overlap_OBJECTS = $(am_matrix_overlap_OBJECTS)
matrix_overlap_LDADD = $(LDADD)
matrix_overlap_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_model_OBJECTS = model.$(OBJEXT)
model_OBJECTS = $(am_model_OBJECTS)
model_LDADD = $(LDADD)
model_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_mut_top_OBJECTS = mut_top.$(OBJEXT)
mut_top_OBJECTS = $(am_mut_top_OBJECTS)
mut_top_LDADD = $(LDADD)
mut_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_nscatt_OBJECTS = nscatt.$(OBJEXT)
nscatt_OBJECTS = $(am_nscatt_OBJECTS)
nscatt_LDADD = $(LDADD)
nscatt_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pdb2seq_OBJECTS = pdb2seq.$(OBJEXT)
pdb2seq_OBJECTS = $(am_pdb2seq_OBJECTS)
pdb2seq_LDADD = $(LDADD)
pdb2seq_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_P1_OBJECTS = pore_P1.$(OBJEXT)
pore_P1_OBJECTS = $(am_pore_P1_OBJECTS)
pore_P1_LDADD = $(LDADD)
pore_P1_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_Pcorr_OBJECTS = pore_Pcorr.$(OBJEXT)
pore_Pcorr_OBJECTS = $(am_pore_Pcorr_OBJECTS)
pore_Pcorr_LDADD = $(LDADD)
pore_Pcorr_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_ads_OBJECTS = pore_ads.$(OBJEXT)
pore_ads_OBJECTS = $(am_pore_ads_OBJECTS)
pore_ads_LDADD = $(LDADD)
pore_ads_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_ax_rad_OBJECTS = pore_ax_rad.$(OBJEXT)
pore_ax_rad_OBJECTS = $(am_pore_ax_rad_OBJECTS)
pore_ax_rad_LDADD = $(LDADD)
pore_ax_rad_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_diffus_OBJECTS = pore_diffus.$(OBJEXT)
pore_diffus_OBJECTS = $(am_pore_diffus_OBJECTS)
pore_diffus_LDADD = $(LDADD)
pore_diffus_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_dist_corr_OBJECTS = pore_dist_corr.$(OBJEXT)
pore_dist_corr_OBJECTS = $(am_pore_dist_corr_OBJECTS)
pore_dist_corr_LDADD = $(LDADD)
pore_dist_corr_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_hsolv_OBJECTS = pore_hsolv.$(OBJEXT)
pore_hsolv_OBJECTS = $(am_pore_hsolv_OBJECTS)
pore_hsolv_LDADD = $(LDADD)
pore_hsolv_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_loading_OBJECTS = pore_loading.$(OBJEXT)
pore_loading_OBJECTS = $(am_pore_loading_OBJECTS)
pore_loading_LDADD = $(LDADD)
pore_loading_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_pf_OBJECTS = pore_pf.$(OBJEXT)
pore_pf_OBJECTS = $(am_pore_pf_OBJECTS)
pore_pf_LDADD = $(LDADD)
pore_pf_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_pf_multi_OBJECTS = pore_pf_multi.$(OBJEXT)
pore_pf_multi_OBJECTS = $(am_pore_pf_multi_OBJECTS)
pore_pf_multi_LDADD = $(LDADD)
pore_pf_multi_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_rates_OBJECTS = pore_rates.$(OBJEXT)
pore_rates_OBJECTS = $(am_pore_rates_OBJECTS)
pore_rates_LDADD = $(LDADD)
pore_rates_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_rot_rel_OBJECTS = pore_rot_rel.$(OBJEXT)
pore_rot_rel_OBJECTS = $(am_pore_rot_rel_OBJECTS)
pore_rot_rel_LDADD = $(LDADD)
pore_rot_rel_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pore_surv_P_OBJECTS = pore_surv_P.$(OBJEXT)
pore_surv_P_OBJECTS = $(am_pore_surv_P_OBJECTS)
pore_surv_P_LDADD = $(LDADD)
pore_surv_P_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_prep_bb_OBJECTS = prep_bb.$(OBJEXT)
prep_bb_OBJECTS = $(am_prep_bb_OBJECTS)
prep_bb_LDADD = $(LDADD)
prep_bb_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_prep_hybrid_OBJECTS = prep_hybrid.$(OBJEXT)
prep_hybrid_OBJECTS = $(am_prep_hybrid_OBJECTS)
prep_hybrid_LDADD = $(LDADD)
prep_hybrid_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_renumber_OBJECTS = renumber.$(OBJEXT)
renumber_OBJECTS = $(am_renumber_OBJECTS)
renumber_LDADD = $(LDADD)
renumber_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rep_rewrite_OBJECTS = rep_rewrite.$(OBJEXT)
rep_rewrite_OBJECTS = $(am_rep_rewrite_OBJECTS)
rep_rewrite_LDADD = $(LDADD)
rep_rewrite_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rottemp_OBJECTS = rottemp.$(OBJEXT)
rottemp_OBJECTS = $(am_rottemp_OBJECTS)
rottemp_LDADD = $(LDADD)
rottemp_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_saltbridge_OBJECTS = saltbridge.$(OBJEXT)
saltbridge_OBJECTS = $(am_saltbridge_OBJECTS)
saltbridge_LDADD = $(LDADD)
saltbridge_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_sasa_new_OBJECTS = sasa_new.$(OBJEXT)
sasa_new_OBJECTS = $(am_sasa_new_OBJECTS)
sasa_new_LDADD = $(LDADD)
sasa_new_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_shake_OBJECTS = shake.$(OBJEXT)
shake_OBJECTS = $(am_shake_OBJECTS)
shake_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
shake_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(shake_LDFLAGS) $(LDFLAGS) -o $@
am_stacking_OBJECTS = stacking.$(OBJEXT)
stacking_OBJECTS = $(am_stacking_OBJECTS)
stacking_LDADD = $(LDADD)
stacking_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_structal_OBJECTS = structal.$(OBJEXT)
structal_OBJECTS = $(am_structal_OBJECTS)
structal_LDADD = $(LDADD)
structal_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_temperature_OBJECTS = temperature.$(OBJEXT)
temperature_OBJECTS = $(am_temperature_OBJECTS)
temperature_LDADD = $(LDADD)
temperature_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_top_to_build_OBJECTS = top_to_build.$(OBJEXT)
top_to_build_OBJECTS = $(am_top_to_build_OBJECTS)
top_to_build_LDADD = $(LDADD)
top_to_build_DEPENDENCIES = $(top_builddir)/src/libgromos.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(Kinetic_MC_SOURCES) $(add_atom_SOURCES) \
	$(aggregates_SOURCES) $(bb2tex_SOURCES) $(bilayer_gel_SOURCES) \
	$(cgLJpot_SOURCES) $(cg_potential_SOURCES) $(countbb_SOURCES) \
	$(crossdih_top_SOURCES) $(depsi2native_SOURCES) \
	$(diff_top_SOURCES) $(dipole_corr_SOURCES) \
	$(dipole_pot_SOURCES) $(distmat_SOURCES) $(ener_rplc_SOURCES) \
	$(ener_test_SOURCES) $(espmap_SOURCES) $(fit_rdc_SOURCES) \
	$(force_SOURCES) $(gatherNT_SOURCES) $(gca_ener_SOURCES) \
	$(graphite_SOURCES) $(grid_dens_SOURCES) \
	$(gromacs2gromos_SOURCES) $(helix_axis_SOURCES) \
	$(hvap_SOURCES) $(iwdcf_SOURCES) $(lb_top_SOURCES) \
	$(local_comp_SOURCES) $(m_ener_SOURCES) \
	$(make_rdc_spec_SOURCES) $(matrix_overlap_SOURCES) \
	$(model_SOURCES) $(mut_top_SOURCES) $(nscatt_SOURCES) \
	$(pdb2seq_SOURCES) $(pore_P1_SOURCES) $(pore_Pcorr_SOURCES) \
	$(pore_ads_SOURCES) $(pore_ax_rad_SOURCES) \
	$(pore_diffus_SOURCES) $(pore_dist_corr_SOURCES) \
	$(pore_hsolv_SOURCES) $(pore_loading_SOURCES) \
	$(pore_pf_SOURCES) $(pore_pf_multi_SOURCES) \
	$(pore_rates_SOURCES) $(pore_rot_rel_SOURCES) \
	$(pore_surv_P_SOURCES) $(prep_bb_SOURCES) \
	$(prep_hybrid_SOURCES) $(renumber_SOURCES) \
	$(rep_rewrite_SOURCES) $(rottemp_SOURCES) \
	$(saltbridge_SOURCES) $(sasa_new_SOURCES) $(shake_SOURCES) \
	$(stacking_SOURCES) $(structal_SOURCES) $(temperature_SOURCES) \
	$(top_to_build_SOURCES)
DIST_SOURCES = $(Kinetic_MC_SOURCES) $(add_atom_SOURCES) \
	$(aggregates_SOURCES) $(bb2tex_SOURCES) $(bilayer_gel_SOURCES) \
	$(cgLJpot_SOURCES) $(cg_potential_SOURCES) $(countbb_SOURCES) \
	$(crossdih_top_SOURCES) $(depsi2native_SOURCES) \
	$(diff_top_SOURCES) $(dipole_corr_SOURCES) \
	$(dipole_pot_SOURCES) $(distmat_SOURCES) $(ener_rplc_SOURCES) \
	$(ener_test_SOURCES) $(espmap_SOURCES) $(fit_rdc_SOURCES) \
	$(force_SOURCES) $(gatherNT_SOURCES) $(gca_ener_SOURCES) \
	$(graphite_SOURCES) $(grid_dens_SOURCES) \
	$(gromacs2gromos_SOURCES) $(helix_axis_SOURCES) \
	$(hvap_SOURCES) $(iwdcf_SOURCES) $(lb_top_SOURCES) \
	$(local_comp_SOURCES) $(m_ener_SOURCES) \
	$(make_rdc_spec_SOURCES) $(matrix_overlap_SOURCES) \
	$(model_SOURCES) $(mut_top_SOURCES) $(nscatt_SOURCES) \
	$(pdb2seq_SOURCES) $(pore_P1_SOURCES) $(pore_Pcorr_SOURCES) \
	$(pore_ads_SOURCES) $(pore_ax_rad_SOURCES) \
	$(pore_diffus_SOURCES) $(pore_dist_corr_SOURCES) \
	$(pore_hsolv_SOURCES) $(pore_loading_SOURCES) \
	$(pore_pf_SOURCES) $(pore_pf_multi_SOURCES) \
	$(pore_rates_SOURCES) $(pore_rot_rel_SOURCES) \
	$(pore_surv_P_SOURCES) $(prep_bb_SOURCES) \
	$(prep_hybrid_SOURCES) $(renumber_SOURCES) \
	$(rep_rewrite_SOURCES) $(rottemp_SOURCES) \
	$(saltbridge_SOURCES) $(sasa_new_SOURCES) $(shake_SOURCES) \
	$(stacking_SOURCES) $(structal_SOURCES) $(temperature_SOURCES) \
	$(top_to_build_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLIPPER_LIB = @CLIPPER_LIB@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GMX_LIB = @GMX_LIB@
GREP = @GREP@
GROMOS_MAJOR_VERSION = @GROMOS_MAJOR_VERSION@
GROMOS_MICRO_VERSION = @GROMOS_MICRO_VERSION@
GROMOS_MINOR_VERSION = @GROMOS_MINOR_VERSION@
GROMOS_VERSION = @GROMOS_VERSION@
GSL_LDFLAGS = @GSL_LDFLAGS@
GSL_LIB = @GSL_LIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LFS = @LFS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LSF = @LSF@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MDPP_LIB = @MDPP_LIB@
MKDIR_P = @MKDIR_P@
MY_CXXFLAGS = @MY_CXXFLAGS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# This is the programs automake template.
AM_CXXFLAGS = @MY_CXXFLAGS@
INCLUDES = -I$(top_srcdir)/src
EXTRA_DIST = 0index_contrib.doxy
aggregates_SOURCES = aggregates.cc
rottemp_SOURCES = rottemp.cc
ener_rplc_SOURCES = ener_rplc.cc
espmap_SOURCES = espmap.cc
lb_top_SOURCES = lb_top.cc
m_ener_SOURCES = m_ener.cc
prep_bb_SOURCES = prep_bb.cc
cg_potential_SOURCES = cg_potential.cc
countbb_SOURCES = countbb.cc
dipole_pot_SOURCES = dipole_pot.cc
stacking_SOURCES = stacking.cc
shake_SOURCES = shake.cc
model_SOURCES = model.cc
gca_ener_SOURCES = gca_ener.cc
renumber_SOURCES = renumber.cc
distmat_SOURCES = distmat.cc
iwdcf_SOURCES = iwdcf.cc
bb2tex_SOURCES = bb2tex.cc
crossdih_top_SOURCES = crossdih_top.cc
saltbridge_SOURCES = saltbridge.cc
bilayer_gel_SOURCES = bilayer_gel.cc
make_rdc_spec_SOURCES = make_rdc_spec.cc
fit_rdc_SOURCES = fit_rdc.cc
add_atom_SOURCES = add_atom.cc
top_to_build_SOURCES = top_to_build.cc
helix_axis_SOURCES = helix_axis.cc
gromacs2gromos_SOURCES = gromacs2gromos.cc
diff_top_SOURCES = diff_top.cc
matrix_overlap_SOURCES = matrix_overlap.cc
grid_dens_SOURCES = grid_dens.cc
pdb2seq_SOURCES = pdb2seq.cc
nscatt_SOURCES = nscatt.cc
structal_SOURCES = structal.cc
cgLJpot_SOURCES = cgLJpot.cc
hvap_SOURCES = hvap.cc
depsi2native_SOURCES = depsi2native.cc
rep_rewrite_SOURCES = rep_rewrite.cc
local_comp_SOURCES = local_comp.cc
prep_hybrid_SOURCES = prep_hybrid.cc
sasa_new_SOURCES = sasa_new.cc
ener_test_SOURCES = ener_test.cc
force_SOURCES = force.cc
mut_top_SOURCES = mut_top.cc
temperature_SOURCES = temperature.cc
gatherNT_SOURCES = gatherNT.cc
pore_loading_SOURCES = pore_loading.cc
pore_ads_SOURCES = pore_ads.cc
pore_ax_rad_SOURCES = pore_ax_rad.cc
pore_pf_SOURCES = pore_pf.cc
pore_pf_multi_SOURCES = pore_pf_multi.cc
pore_diffus_SOURCES = pore_diffus.cc
pore_P1_SOURCES = pore_P1.cc
pore_Pcorr_SOURCES = pore_Pcorr.cc
pore_rates_SOURCES = pore_rates.cc
pore_dist_corr_SOURCES = pore_dist_corr.cc
pore_surv_P_SOURCES = pore_surv_P.cc
pore_hsolv_SOURCES = pore_hsolv.cc
graphite_SOURCES = graphite.cc
pore_rot_rel_SOURCES = pore_rot_rel.cc
dipole_corr_SOURCES = dipole_corr.cc
Kinetic_MC_SOURCES = Kinetic_MC.cc
LDADD = $(top_builddir)/src/libgromos.la
shake_LDADD = $(MDPP_LIB) $(top_builddir)/src/libgromos.la
shake_LDFLAGS = $(MDPP_LDFLAGS)
gromacs2gromos_LDADD = $(GMX_LIB) $(top_builddir)/src/libgromos.la
gromacs2gromos_LDFLAGS = $(GMX_LDFLAGS) $(top_builddir)/src/libgromos.la
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu contrib/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu contrib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

Kinetic_MC$(EXEEXT): $(Kinetic_MC_OBJECTS) $(Kinetic_MC_DEPENDENCIES) $(EXTRA_Kinetic_MC_DEPENDENCIES) 
	@rm -f Kinetic_MC$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(Kinetic_MC_OBJECTS) $(Kinetic_MC_LDADD) $(LIBS)

add_atom$(EXEEXT): $(add_atom_OBJECTS) $(add_atom_DEPENDENCIES) $(EXTRA_add_atom_DEPENDENCIES) 
	@rm -f add_atom$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(add_atom_OBJECTS) $(add_atom_LDADD) $(LIBS)

aggregates$(EXEEXT): $(aggregates_OBJECTS) $(aggregates_DEPENDENCIES) $(EXTRA_aggregates_DEPENDENCIES) 
	@rm -f aggregates$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(aggregates_OBJECTS) $(aggregates_LDADD) $(LIBS)

bb2tex$(EXEEXT): $(bb2tex_OBJECTS) $(bb2tex_DEPENDENCIES) $(EXTRA_bb2tex_DEPENDENCIES) 
	@rm -f bb2tex$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bb2tex_OBJECTS) $(bb2tex_LDADD) $(LIBS)

bilayer_gel$(EXEEXT): $(bilayer_gel_OBJECTS) $(bilayer_gel_DEPENDENCIES) $(EXTRA_bilayer_gel_DEPENDENCIES) 
	@rm -f bilayer_gel$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(bilayer_gel_OBJECTS) $(bilayer_gel_LDADD) $(LIBS)

cgLJpot$(EXEEXT): $(cgLJpot_OBJECTS) $(cgLJpot_DEPENDENCIES) $(EXTRA_cgLJpot_DEPENDENCIES) 
	@rm -f cgLJpot$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cgLJpot_OBJECTS) $(cgLJpot_LDADD) $(LIBS)

cg_potential$(EXEEXT): $(cg_potential_OBJECTS) $(cg_potential_DEPENDENCIES) $(EXTRA_cg_potential_DEPENDENCIES) 
	@rm -f cg_potential$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(cg_potential_OBJECTS) $(cg_potential_LDADD) $(LIBS)

countbb$(EXEEXT): $(countbb_OBJECTS) $(countbb_DEPENDENCIES) $(EXTRA_countbb_DEPENDENCIES) 
	@rm -f countbb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(countbb_OBJECTS) $(countbb_LDADD) $(LIBS)

crossdih_top$(EXEEXT): $(crossdih_top_OBJECTS) $(crossdih_top_DEPENDENCIES) $(EXTRA_crossdih_top_DEPENDENCIES) 
	@rm -f crossdih_top$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(crossdih_top_OBJECTS) $(crossdih_top_LDADD) $(LIBS)

depsi2native$(EXEEXT): $(depsi2native_OBJECTS) $(depsi2native_DEPENDENCIES) $(EXTRA_depsi2native_DEPENDENCIES) 
	@rm -f depsi2native$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(depsi2native_OBJECTS) $(depsi2native_LDADD) $(LIBS)

diff_top$(EXEEXT): $(diff_top_OBJECTS) $(diff_top_DEPENDENCIES) $(EXTRA_diff_top_DEPENDENCIES) 
	@rm -f diff_top$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(diff_top_OBJECTS) $(diff_top_LDADD) $(LIBS)

dipole_corr$(EXEEXT): $(dipole_corr_OBJECTS) $(dipole_corr_DEPENDENCIES) $(EXTRA_dipole_corr_DEPENDENCIES) 
	@rm -f dipole_corr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dipole_corr_OBJECTS) $(dipole_corr_LDADD) $(LIBS)

dipole_pot$(EXEEXT): $(dipole_pot_OBJECTS) $(dipole_pot_DEPENDENCIES) $(EXTRA_dipole_pot_DEPENDENCIES) 
	@rm -f dipole_pot$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(dipole_pot_OBJECTS) $(dipole_pot_LDADD) $(LIBS)

distmat$(EXEEXT): $(distmat_OBJECTS) $(distmat_DEPENDENCIES) $(EXTRA_distmat_DEPENDENCIES) 
	@rm -f distmat$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(distmat_OBJECTS) $(distmat_LDADD) $(LIBS)

ener_rplc$(EXEEXT): $(ener_rplc_OBJECTS) $(ener_rplc_DEPENDENCIES) $(EXTRA_ener_rplc_DEPENDENCIES) 
	@rm -f ener_rplc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ener_rplc_OBJECTS) $(ener_rplc_LDADD) $(LIBS)

ener_test$(EXEEXT): $(ener_test_OBJECTS) $(ener_test_DEPENDENCIES) $(EXTRA_ener_test_DEPENDENCIES) 
	@rm -f ener_test$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(ener_test_OBJECTS) $(ener_test_LDADD) $(LIBS)

espmap$(EXEEXT): $(espmap_OBJECTS) $(espmap_DEPENDENCIES) $(EXTRA_espmap_DEPENDENCIES) 
	@rm -f espmap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(espmap_OBJECTS) $(espmap_LDADD) $(LIBS)

fit_rdc$(EXEEXT): $(fit_rdc_OBJECTS) $(fit_rdc_DEPENDENCIES) $(EXTRA_fit_rdc_DEPENDENCIES) 
	@rm -f fit_rdc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(fit_rdc_OBJECTS) $(fit_rdc_LDADD) $(LIBS)

force$(EXEEXT): $(force_OBJECTS) $(force_DEPENDENCIES) $(EXTRA_force_DEPENDENCIES) 
	@rm -f force$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(force_OBJECTS) $(force_LDADD) $(LIBS)

gatherNT$(EXEEXT): $(gatherNT_OBJECTS) $(gatherNT_DEPENDENCIES) $(EXTRA_gatherNT_DEPENDENCIES) 
	@rm -f gatherNT$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(gatherNT_OBJECTS) $(gatherNT_LDADD) $(LIBS)

gca_ener$(EXEEXT): $(gca_ener_OBJECTS) $(gca_ener_DEPENDENCIES) $(EXTRA_gca_ener_DEPENDENCIES) 
	@rm -f gca_ener$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(gca_ener_OBJECTS) $(gca_ener_LDADD) $(LIBS)

graphite$(EXEEXT): $(graphite_OBJECTS) $(graphite_DEPENDENCIES) $(EXTRA_graphite_DEPENDENCIES) 
	@rm -f graphite$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(graphite_OBJECTS) $(graphite_LDADD) $(LIBS)

grid_dens$(EXEEXT): $(grid_dens_OBJECTS) $(grid_dens_DEPENDENCIES) $(EXTRA_grid_dens_DEPENDENCIES) 
	@rm -f grid_dens$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(grid_dens_OBJECTS) $(grid_dens_LDADD) $(LIBS)

gromacs2gromos$(EXEEXT): $(gromacs2gromos_OBJECTS) $(gromacs2gromos_DEPENDENCIES) $(EXTRA_gromacs2gromos_DEPENDENCIES) 
	@rm -f gromacs2gromos$(EXEEXT)
	$(AM_V_CXXLD)$(gromacs2gromos_LINK) $(gromacs2gromos_OBJECTS) $(gromacs2gromos_LDADD) $(LIBS)

helix_axis$(EXEEXT): $(helix_axis_OBJECTS) $(helix_axis_DEPENDENCIES) $(EXTRA_helix_axis_DEPENDENCIES) 
	@rm -f helix_axis$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(helix_axis_OBJECTS) $(helix_axis_LDADD) $(LIBS)

hvap$(EXEEXT): $(hvap_OBJECTS) $(hvap_DEPENDENCIES) $(EXTRA_hvap_DEPENDENCIES) 
	@rm -f hvap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(hvap_OBJECTS) $(hvap_LDADD) $(LIBS)

iwdcf$(EXEEXT): $(iwdcf_OBJECTS) $(iwdcf_DEPENDENCIES) $(EXTRA_iwdcf_DEPENDENCIES) 
	@rm -f iwdcf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(iwdcf_OBJECTS) $(iwdcf_LDADD) $(LIBS)

lb_top$(EXEEXT): $(lb_top_OBJECTS) $(lb_top_DEPENDENCIES) $(EXTRA_lb_top_DEPENDENCIES) 
	@rm -f lb_top$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(lb_top_OBJECTS) $(lb_top_LDADD) $(LIBS)

local_comp$(EXEEXT): $(local_comp_OBJECTS) $(local_comp_DEPENDENCIES) $(EXTRA_local_comp_DEPENDENCIES) 
	@rm -f local_comp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(local_comp_OBJECTS) $(local_comp_LDADD) $(LIBS)

m_ener$(EXEEXT): $(m_ener_OBJECTS) $(m_ener_DEPENDENCIES) $(EXTRA_m_ener_DEPENDENCIES) 
	@rm -f m_ener$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(m_ener_OBJECTS) $(m_ener_LDADD) $(LIBS)

make_rdc_spec$(EXEEXT): $(make_rdc_spec_OBJECTS) $(make_rdc_spec_DEPENDENCIES) $(EXTRA_make_rdc_spec_DEPENDENCIES) 
	@rm -f make_rdc_spec$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(make_rdc_spec_OBJECTS) $(make_rdc_spec_LDADD) $(LIBS)

matrix_overlap$(EXEEXT): $(matrix_overlap_OBJECTS) $(matrix_overlap_DEPENDENCIES) $(EXTRA_matrix_overlap_DEPENDENCIES) 
	@rm -f matrix_overlap$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(matrix_overlap_OBJECTS) $(matrix_overlap_LDADD) $(LIBS)

model$(EXEEXT): $(model_OBJECTS) $(model_DEPENDENCIES) $(EXTRA_model_DEPENDENCIES) 
	@rm -f model$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(model_OBJECTS) $(model_LDADD) $(LIBS)

mut_top$(EXEEXT): $(mut_top_OBJECTS) $(mut_top_DEPENDENCIES) $(EXTRA_mut_top_DEPENDENCIES) 
	@rm -f mut_top$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(mut_top_OBJECTS) $(mut_top_LDADD) $(LIBS)

nscatt$(EXEEXT): $(nscatt_OBJECTS) $(nscatt_DEPENDENCIES) $(EXTRA_nscatt_DEPENDENCIES) 
	@rm -f nscatt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(nscatt_OBJECTS) $(nscatt_LDADD) $(LIBS)

pdb2seq$(EXEEXT): $(pdb2seq_OBJECTS) $(pdb2seq_DEPENDENCIES) $(EXTRA_pdb2seq_DEPENDENCIES) 
	@rm -f pdb2seq$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pdb2seq_OBJECTS) $(pdb2seq_LDADD) $(LIBS)

pore_P1$(EXEEXT): $(pore_P1_OBJECTS) $(pore_P1_DEPENDENCIES) $(EXTRA_pore_P1_DEPENDENCIES) 
	@rm -f pore_P1$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_P1_OBJECTS) $(pore_P1_LDADD) $(LIBS)

pore_Pcorr$(EXEEXT): $(pore_Pcorr_OBJECTS) $(pore_Pcorr_DEPENDENCIES) $(EXTRA_pore_Pcorr_DEPENDENCIES) 
	@rm -f pore_Pcorr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_Pcorr_OBJECTS) $(pore_Pcorr_LDADD) $(LIBS)

pore_ads$(EXEEXT): $(pore_ads_OBJECTS) $(pore_ads_DEPENDENCIES) $(EXTRA_pore_ads_DEPENDENCIES) 
	@rm -f pore_ads$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_ads_OBJECTS) $(pore_ads_LDADD) $(LIBS)

pore_ax_rad$(EXEEXT): $(pore_ax_rad_OBJECTS) $(pore_ax_rad_DEPENDENCIES) $(EXTRA_pore_ax_rad_DEPENDENCIES) 
	@rm -f pore_ax_rad$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_ax_rad_OBJECTS) $(pore_ax_rad_LDADD) $(LIBS)

pore_diffus$(EXEEXT): $(pore_diffus_OBJECTS) $(pore_diffus_DEPENDENCIES) $(EXTRA_pore_diffus_DEPENDENCIES) 
	@rm -f pore_diffus$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_diffus_OBJECTS) $(pore_diffus_LDADD) $(LIBS)

pore_dist_corr$(EXEEXT): $(pore_dist_corr_OBJECTS) $(pore_dist_corr_DEPENDENCIES) $(EXTRA_pore_dist_corr_DEPENDENCIES) 
	@rm -f pore_dist_corr$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_dist_corr_OBJECTS) $(pore_dist_corr_LDADD) $(LIBS)

pore_hsolv$(EXEEXT): $(pore_hsolv_OBJECTS) $(pore_hsolv_DEPENDENCIES) $(EXTRA_pore_hsolv_DEPENDENCIES) 
	@rm -f pore_hsolv$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_hsolv_OBJECTS) $(pore_hsolv_LDADD) $(LIBS)

pore_loading$(EXEEXT): $(pore_loading_OBJECTS) $(pore_loading_DEPENDENCIES) $(EXTRA_pore_loading_DEPENDENCIES) 
	@rm -f pore_loading$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_loading_OBJECTS) $(pore_loading_LDADD) $(LIBS)

pore_pf$(EXEEXT): $(pore_pf_OBJECTS) $(pore_pf_DEPENDENCIES) $(EXTRA_pore_pf_DEPENDENCIES) 
	@rm -f pore_pf$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_pf_OBJECTS) $(pore_pf_LDADD) $(LIBS)

pore_pf_multi$(EXEEXT): $(pore_pf_multi_OBJECTS) $(pore_pf_multi_DEPENDENCIES) $(EXTRA_pore_pf_multi_DEPENDENCIES) 
	@rm -f pore_pf_multi$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_pf_multi_OBJECTS) $(pore_pf_multi_LDADD) $(LIBS)

pore_rates$(EXEEXT): $(pore_rates_OBJECTS) $(pore_rates_DEPENDENCIES) $(EXTRA_pore_rates_DEPENDENCIES) 
	@rm -f pore_rates$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_rates_OBJECTS) $(pore_rates_LDADD) $(LIBS)

pore_rot_rel$(EXEEXT): $(pore_rot_rel_OBJECTS) $(pore_rot_rel_DEPENDENCIES) $(EXTRA_pore_rot_rel_DEPENDENCIES) 
	@rm -f pore_rot_rel$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_rot_rel_OBJECTS) $(pore_rot_rel_LDADD) $(LIBS)

pore_surv_P$(EXEEXT): $(pore_surv_P_OBJECTS) $(pore_surv_P_DEPENDENCIES) $(EXTRA_pore_surv_P_DEPENDENCIES) 
	@rm -f pore_surv_P$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(pore_surv_P_OBJECTS) $(pore_surv_P_LDADD) $(LIBS)

prep_bb$(EXEEXT): $(prep_bb_OBJECTS) $(prep_bb_DEPENDENCIES) $(EXTRA_prep_bb_DEPENDENCIES) 
	@rm -f prep_bb$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(prep_bb_OBJECTS) $(prep_bb_LDADD) $(LIBS)

prep_hybrid$(EXEEXT): $(prep_hybrid_OBJECTS) $(prep_hybrid_DEPENDENCIES) $(EXTRA_prep_hybrid_DEPENDENCIES) 
	@rm -f prep_hybrid$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(prep_hybrid_OBJECTS) $(prep_hybrid_LDADD) $(LIBS)

renumber$(EXEEXT): $(renumber_OBJECTS) $(renumber_DEPENDENCIES) $(EXTRA_renumber_DEPENDENCIES) 
	@rm -f renumber$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(renumber_OBJECTS) $(renumber_LDADD) $(LIBS)

rep_rewrite$(EXEEXT): $(rep_rewrite_OBJECTS) $(rep_rewrite_DEPENDENCIES) $(EXTRA_rep_rewrite_DEPENDENCIES) 
	@rm -f rep_rewrite$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rep_rewrite_OBJECTS) $(rep_rewrite_LDADD) $(LIBS)

rottemp$(EXEEXT): $(rottemp_OBJECTS) $(rottemp_DEPENDENCIES) $(EXTRA_rottemp_DEPENDENCIES) 
	@rm -f rottemp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(rottemp_OBJECTS) $(rottemp_LDADD) $(LIBS)

saltbridge$(EXEEXT): $(saltbridge_OBJECTS) $(saltbridge_DEPENDENCIES) $(EXTRA_saltbridge_DEPENDENCIES) 
	@rm -f saltbridge$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(saltbridge_OBJECTS) $(saltbridge_LDADD) $(LIBS)

sasa_new$(EXEEXT): $(sasa_new_OBJECTS) $(sasa_new_DEPENDENCIES) $(EXTRA_sasa_new_DEPENDENCIES) 
	@rm -f sasa_new$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(sasa_new_OBJECTS) $(sasa_new_LDADD) $(LIBS)

shake$(EXEEXT): $(shake_OBJECTS) $(shake_DEPENDENCIES) $(EXTRA_shake_DEPENDENCIES) 
	@rm -f shake$(EXEEXT)
	$(AM_V_CXXLD)$(shake_LINK) $(shake_OBJECTS) $(shake_LDADD) $(LIBS)

stacking$(EXEEXT): $(stacking_OBJECTS) $(stacking_DEPENDENCIES) $(EXTRA_stacking_DEPENDENCIES) 
	@rm -f stacking$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(stacking_OBJECTS) $(stacking_LDADD) $(LIBS)

structal$(EXEEXT): $(structal_OBJECTS) $(structal_DEPENDENCIES) $(EXTRA_structal_DEPENDENCIES) 
	@rm -f structal$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(structal_OBJECTS) $(structal_LDADD) $(LIBS)

temperature$(EXEEXT): $(temperature_OBJECTS) $(temperature_DEPENDENCIES) $(EXTRA_temperature_DEPENDENCIES) 
	@rm -f temperature$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(temperature_OBJECTS) $(temperature_LDADD) $(LIBS)

top_to_build$(EXEEXT): $(top_to_build_OBJECTS) $(top_to_build_DEPENDENCIES) $(EXTRA_top_to_build_DEPENDENCIES) 
	@rm -f top_to_build$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(top_to_build_OBJECTS) $(top_to_build_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Kinetic_MC.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/add_atom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/aggregates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bb2tex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bilayer_gel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cgLJpot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cg_potential.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/countbb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/crossdih_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/depsi2native.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diff_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dipole_corr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dipole_pot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/distmat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ener_rplc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ener_test.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/espmap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/fit_rdc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/force.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gatherNT.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gca_ener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/graphite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/grid_dens.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gromacs2gromos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/helix_axis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hvap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iwdcf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lb_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/local_comp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/m_ener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make_rdc_spec.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrix_overlap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/model.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mut_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nscatt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdb2seq.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_P1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_Pcorr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_ads.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_ax_rad.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_diffus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_dist_corr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_hsolv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_loading.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_pf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_pf_multi.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_rates.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_rot_rel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pore_surv_P.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prep_bb.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prep_hybrid.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/renumber.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rep_rewrite.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rottemp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/saltbridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sasa_new.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shake.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stacking.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/structal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/temperature.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/top_to_build.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
