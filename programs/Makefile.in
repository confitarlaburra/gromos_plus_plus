# Makefile.in generated by automake 1.11.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = rmsd$(EXEEXT) pdb2g96$(EXEEXT) ener$(EXEEXT) \
	dg_ener$(EXEEXT) noe$(EXEEXT) prep_noe$(EXEEXT) \
	post_noe$(EXEEXT) rgyr$(EXEEXT) tser$(EXEEXT) ditrans$(EXEEXT) \
	diffus$(EXEEXT) tstrip$(EXEEXT) temp$(EXEEXT) \
	gathtraj$(EXEEXT) edyn$(EXEEXT) rmsf$(EXEEXT) dipole$(EXEEXT) \
	rmsdmat$(EXEEXT) rmsd_cmp$(EXEEXT) cluster$(EXEEXT) \
	postcluster$(EXEEXT) check_box$(EXEEXT) make_top$(EXEEXT) \
	make_sasa_top$(EXEEXT) con_top$(EXEEXT) com_top$(EXEEXT) \
	red_top$(EXEEXT) pt_top$(EXEEXT) link_top$(EXEEXT) \
	copy_box$(EXEEXT) build_box$(EXEEXT) bin_box$(EXEEXT) \
	ran_box$(EXEEXT) ran_solvation$(EXEEXT) pert_top$(EXEEXT) \
	explode$(EXEEXT) hbond$(EXEEXT) frameout$(EXEEXT) \
	nhoparam$(EXEEXT) rdf$(EXEEXT) mdf$(EXEEXT) iondens$(EXEEXT) \
	mk_script$(EXEEXT) check_top$(EXEEXT) ene_ana$(EXEEXT) \
	int_ener$(EXEEXT) visco$(EXEEXT) epsilon$(EXEEXT) \
	eps_field$(EXEEXT) gch$(EXEEXT) sim_box$(EXEEXT) ion$(EXEEXT) \
	gca$(EXEEXT) dssp$(EXEEXT) atominfo$(EXEEXT) \
	shake_analysis$(EXEEXT) filter$(EXEEXT) follow$(EXEEXT) \
	jval$(EXEEXT) jepot$(EXEEXT) swd$(EXEEXT) sasa$(EXEEXT) \
	sasa_hasel$(EXEEXT) tcf$(EXEEXT) m_widom$(EXEEXT) cog$(EXEEXT) \
	rot_rel$(EXEEXT) inbox$(EXEEXT) cry$(EXEEXT) \
	unify_box$(EXEEXT) make_pt_top$(EXEEXT) \
	solute_entropy$(EXEEXT) pairlist$(EXEEXT) prep_eds$(EXEEXT) \
	eds_update_1$(EXEEXT) eds_update_2$(EXEEXT) dfmult$(EXEEXT) \
	reweight$(EXEEXT) stat_ana$(EXEEXT) bilayer_dist$(EXEEXT) \
	bilayer_oparam$(EXEEXT) rep_ana$(EXEEXT) \
	matrix_overlap$(EXEEXT) close_pair$(EXEEXT) \
	predict_noe$(EXEEXT) prep_xray$(EXEEXT) duplicate$(EXEEXT) \
	structure_factor$(EXEEXT) xrayts$(EXEEXT) r_factor$(EXEEXT) \
	xray_map$(EXEEXT) r_real_factor$(EXEEXT) prep_xray_le$(EXEEXT) \
	cry_rms$(EXEEXT) epath$(EXEEXT) disicl$(EXEEXT) \
	trs_ana$(EXEEXT) dGslv_pbsolv$(EXEEXT)
subdir = programs
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 $(top_srcdir)/VERSION \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"
PROGRAMS = $(bin_PROGRAMS)
am_atominfo_OBJECTS = atominfo.$(OBJEXT)
atominfo_OBJECTS = $(am_atominfo_OBJECTS)
atominfo_LDADD = $(LDADD)
atominfo_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_bilayer_dist_OBJECTS = bilayer_dist.$(OBJEXT)
bilayer_dist_OBJECTS = $(am_bilayer_dist_OBJECTS)
bilayer_dist_LDADD = $(LDADD)
bilayer_dist_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_bilayer_oparam_OBJECTS = bilayer_oparam.$(OBJEXT)
bilayer_oparam_OBJECTS = $(am_bilayer_oparam_OBJECTS)
bilayer_oparam_LDADD = $(LDADD)
bilayer_oparam_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_bin_box_OBJECTS = bin_box.$(OBJEXT)
bin_box_OBJECTS = $(am_bin_box_OBJECTS)
bin_box_LDADD = $(LDADD)
bin_box_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_build_box_OBJECTS = build_box.$(OBJEXT)
build_box_OBJECTS = $(am_build_box_OBJECTS)
build_box_LDADD = $(LDADD)
build_box_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_check_box_OBJECTS = check_box.$(OBJEXT)
check_box_OBJECTS = $(am_check_box_OBJECTS)
check_box_LDADD = $(LDADD)
check_box_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_check_top_OBJECTS = check_top.$(OBJEXT)
check_top_OBJECTS = $(am_check_top_OBJECTS)
check_top_LDADD = $(LDADD)
check_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_close_pair_OBJECTS = close_pair.$(OBJEXT)
close_pair_OBJECTS = $(am_close_pair_OBJECTS)
close_pair_LDADD = $(LDADD)
close_pair_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_cluster_OBJECTS = cluster.$(OBJEXT)
cluster_OBJECTS = $(am_cluster_OBJECTS)
cluster_LDADD = $(LDADD)
cluster_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_cog_OBJECTS = cog.$(OBJEXT)
cog_OBJECTS = $(am_cog_OBJECTS)
cog_LDADD = $(LDADD)
cog_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_com_top_OBJECTS = com_top.$(OBJEXT)
com_top_OBJECTS = $(am_com_top_OBJECTS)
com_top_LDADD = $(LDADD)
com_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_con_top_OBJECTS = con_top.$(OBJEXT)
con_top_OBJECTS = $(am_con_top_OBJECTS)
con_top_LDADD = $(LDADD)
con_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_copy_box_OBJECTS = copy_box.$(OBJEXT)
copy_box_OBJECTS = $(am_copy_box_OBJECTS)
copy_box_LDADD = $(LDADD)
copy_box_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_cry_OBJECTS = cry.$(OBJEXT)
cry_OBJECTS = $(am_cry_OBJECTS)
am__DEPENDENCIES_1 =
cry_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
am_cry_rms_OBJECTS = cry_rms.$(OBJEXT)
cry_rms_OBJECTS = $(am_cry_rms_OBJECTS)
cry_rms_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
cry_rms_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(cry_rms_LDFLAGS) $(LDFLAGS) -o $@
am_dGslv_pbsolv_OBJECTS = dGslv_pbsolv.$(OBJEXT)
dGslv_pbsolv_OBJECTS = $(am_dGslv_pbsolv_OBJECTS)
dGslv_pbsolv_LDADD = $(LDADD)
dGslv_pbsolv_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_dfmult_OBJECTS = dfmult.$(OBJEXT)
dfmult_OBJECTS = $(am_dfmult_OBJECTS)
dfmult_LDADD = $(LDADD)
dfmult_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_dg_ener_OBJECTS = dg_ener.$(OBJEXT)
dg_ener_OBJECTS = $(am_dg_ener_OBJECTS)
dg_ener_LDADD = $(LDADD)
dg_ener_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_diffus_OBJECTS = diffus.$(OBJEXT)
diffus_OBJECTS = $(am_diffus_OBJECTS)
diffus_LDADD = $(LDADD)
diffus_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_dipole_OBJECTS = dipole.$(OBJEXT)
dipole_OBJECTS = $(am_dipole_OBJECTS)
dipole_LDADD = $(LDADD)
dipole_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_disicl_OBJECTS = disicl.$(OBJEXT)
disicl_OBJECTS = $(am_disicl_OBJECTS)
disicl_LDADD = $(LDADD)
disicl_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_ditrans_OBJECTS = ditrans.$(OBJEXT)
ditrans_OBJECTS = $(am_ditrans_OBJECTS)
ditrans_LDADD = $(LDADD)
ditrans_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_dssp_OBJECTS = dssp.$(OBJEXT)
dssp_OBJECTS = $(am_dssp_OBJECTS)
dssp_LDADD = $(LDADD)
dssp_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_duplicate_OBJECTS = duplicate.$(OBJEXT)
duplicate_OBJECTS = $(am_duplicate_OBJECTS)
duplicate_LDADD = $(LDADD)
duplicate_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_eds_update_1_OBJECTS = eds_update_1.$(OBJEXT)
eds_update_1_OBJECTS = $(am_eds_update_1_OBJECTS)
eds_update_1_LDADD = $(LDADD)
eds_update_1_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_eds_update_2_OBJECTS = eds_update_2.$(OBJEXT)
eds_update_2_OBJECTS = $(am_eds_update_2_OBJECTS)
eds_update_2_LDADD = $(LDADD)
eds_update_2_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_edyn_OBJECTS = edyn.$(OBJEXT)
edyn_OBJECTS = $(am_edyn_OBJECTS)
edyn_LDADD = $(LDADD)
edyn_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_ene_ana_OBJECTS = ene_ana.$(OBJEXT)
ene_ana_OBJECTS = $(am_ene_ana_OBJECTS)
ene_ana_LDADD = $(LDADD)
ene_ana_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_ener_OBJECTS = ener.$(OBJEXT)
ener_OBJECTS = $(am_ener_OBJECTS)
ener_LDADD = $(LDADD)
ener_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_epath_OBJECTS = epath.$(OBJEXT)
epath_OBJECTS = $(am_epath_OBJECTS)
epath_LDADD = $(LDADD)
epath_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_eps_field_OBJECTS = eps_field.$(OBJEXT)
eps_field_OBJECTS = $(am_eps_field_OBJECTS)
eps_field_LDADD = $(LDADD)
eps_field_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_epsilon_OBJECTS = epsilon.$(OBJEXT)
epsilon_OBJECTS = $(am_epsilon_OBJECTS)
epsilon_LDADD = $(LDADD)
epsilon_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_explode_OBJECTS = explode.$(OBJEXT)
explode_OBJECTS = $(am_explode_OBJECTS)
explode_LDADD = $(LDADD)
explode_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_filter_OBJECTS = filter.$(OBJEXT)
filter_OBJECTS = $(am_filter_OBJECTS)
filter_LDADD = $(LDADD)
filter_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_follow_OBJECTS = follow.$(OBJEXT)
follow_OBJECTS = $(am_follow_OBJECTS)
follow_LDADD = $(LDADD)
follow_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_frameout_OBJECTS = frameout.$(OBJEXT)
frameout_OBJECTS = $(am_frameout_OBJECTS)
frameout_LDADD = $(LDADD)
frameout_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_gathtraj_OBJECTS = gathtraj.$(OBJEXT)
gathtraj_OBJECTS = $(am_gathtraj_OBJECTS)
gathtraj_LDADD = $(LDADD)
gathtraj_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_gca_OBJECTS = gca.$(OBJEXT)
gca_OBJECTS = $(am_gca_OBJECTS)
gca_LDADD = $(LDADD)
gca_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_gch_OBJECTS = gch.$(OBJEXT)
gch_OBJECTS = $(am_gch_OBJECTS)
gch_LDADD = $(LDADD)
gch_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_hbond_OBJECTS = hbond.$(OBJEXT)
hbond_OBJECTS = $(am_hbond_OBJECTS)
hbond_LDADD = $(LDADD)
hbond_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_inbox_OBJECTS = inbox.$(OBJEXT)
inbox_OBJECTS = $(am_inbox_OBJECTS)
inbox_LDADD = $(LDADD)
inbox_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_int_ener_OBJECTS = int_ener.$(OBJEXT)
int_ener_OBJECTS = $(am_int_ener_OBJECTS)
int_ener_LDADD = $(LDADD)
int_ener_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_ion_OBJECTS = ion.$(OBJEXT)
ion_OBJECTS = $(am_ion_OBJECTS)
ion_LDADD = $(LDADD)
ion_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_iondens_OBJECTS = iondens.$(OBJEXT)
iondens_OBJECTS = $(am_iondens_OBJECTS)
iondens_LDADD = $(LDADD)
iondens_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_jepot_OBJECTS = jepot.$(OBJEXT)
jepot_OBJECTS = $(am_jepot_OBJECTS)
jepot_LDADD = $(LDADD)
jepot_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_jval_OBJECTS = jval.$(OBJEXT)
jval_OBJECTS = $(am_jval_OBJECTS)
jval_LDADD = $(LDADD)
jval_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_link_top_OBJECTS = link_top.$(OBJEXT)
link_top_OBJECTS = $(am_link_top_OBJECTS)
link_top_LDADD = $(LDADD)
link_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_m_widom_OBJECTS = m_widom.$(OBJEXT)
m_widom_OBJECTS = $(am_m_widom_OBJECTS)
m_widom_LDADD = $(LDADD)
m_widom_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_make_pt_top_OBJECTS = make_pt_top.$(OBJEXT)
make_pt_top_OBJECTS = $(am_make_pt_top_OBJECTS)
make_pt_top_LDADD = $(LDADD)
make_pt_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_make_sasa_top_OBJECTS = make_sasa_top.$(OBJEXT)
make_sasa_top_OBJECTS = $(am_make_sasa_top_OBJECTS)
make_sasa_top_LDADD = $(LDADD)
make_sasa_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_make_top_OBJECTS = make_top.$(OBJEXT)
make_top_OBJECTS = $(am_make_top_OBJECTS)
make_top_LDADD = $(LDADD)
make_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_matrix_overlap_OBJECTS = matrix_overlap.$(OBJEXT)
matrix_overlap_OBJECTS = $(am_matrix_overlap_OBJECTS)
matrix_overlap_LDADD = $(LDADD)
matrix_overlap_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_mdf_OBJECTS = mdf.$(OBJEXT)
mdf_OBJECTS = $(am_mdf_OBJECTS)
mdf_LDADD = $(LDADD)
mdf_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_mk_script_OBJECTS = mk_script.$(OBJEXT)
mk_script_OBJECTS = $(am_mk_script_OBJECTS)
mk_script_LDADD = $(LDADD)
mk_script_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_nhoparam_OBJECTS = nhoparam.$(OBJEXT)
nhoparam_OBJECTS = $(am_nhoparam_OBJECTS)
nhoparam_LDADD = $(LDADD)
nhoparam_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_noe_OBJECTS = noe.$(OBJEXT)
noe_OBJECTS = $(am_noe_OBJECTS)
noe_LDADD = $(LDADD)
noe_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pairlist_OBJECTS = pairlist.$(OBJEXT)
pairlist_OBJECTS = $(am_pairlist_OBJECTS)
pairlist_LDADD = $(LDADD)
pairlist_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pdb2g96_OBJECTS = pdb2g96.$(OBJEXT)
pdb2g96_OBJECTS = $(am_pdb2g96_OBJECTS)
pdb2g96_LDADD = $(LDADD)
pdb2g96_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pert_top_OBJECTS = pert_top.$(OBJEXT)
pert_top_OBJECTS = $(am_pert_top_OBJECTS)
pert_top_LDADD = $(LDADD)
pert_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_post_noe_OBJECTS = post_noe.$(OBJEXT)
post_noe_OBJECTS = $(am_post_noe_OBJECTS)
post_noe_LDADD = $(LDADD)
post_noe_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_postcluster_OBJECTS = postcluster.$(OBJEXT)
postcluster_OBJECTS = $(am_postcluster_OBJECTS)
postcluster_LDADD = $(LDADD)
postcluster_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_predict_noe_OBJECTS = predict_noe.$(OBJEXT)
predict_noe_OBJECTS = $(am_predict_noe_OBJECTS)
predict_noe_LDADD = $(LDADD)
predict_noe_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_prep_eds_OBJECTS = prep_eds.$(OBJEXT)
prep_eds_OBJECTS = $(am_prep_eds_OBJECTS)
prep_eds_LDADD = $(LDADD)
prep_eds_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_prep_noe_OBJECTS = prep_noe.$(OBJEXT)
prep_noe_OBJECTS = $(am_prep_noe_OBJECTS)
prep_noe_LDADD = $(LDADD)
prep_noe_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_prep_xray_OBJECTS = prep_xray.$(OBJEXT)
prep_xray_OBJECTS = $(am_prep_xray_OBJECTS)
prep_xray_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
prep_xray_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(prep_xray_LDFLAGS) $(LDFLAGS) -o $@
am_prep_xray_le_OBJECTS = prep_xray_le.$(OBJEXT)
prep_xray_le_OBJECTS = $(am_prep_xray_le_OBJECTS)
prep_xray_le_LDADD = $(LDADD)
prep_xray_le_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_pt_top_OBJECTS = pt_top.$(OBJEXT)
pt_top_OBJECTS = $(am_pt_top_OBJECTS)
pt_top_LDADD = $(LDADD)
pt_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_r_factor_OBJECTS = r_factor.$(OBJEXT)
r_factor_OBJECTS = $(am_r_factor_OBJECTS)
r_factor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
r_factor_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(r_factor_LDFLAGS) $(LDFLAGS) -o $@
am_r_real_factor_OBJECTS = r_real_factor.$(OBJEXT)
r_real_factor_OBJECTS = $(am_r_real_factor_OBJECTS)
r_real_factor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
r_real_factor_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(r_real_factor_LDFLAGS) $(LDFLAGS) -o $@
am_ran_box_OBJECTS = ran_box.$(OBJEXT)
ran_box_OBJECTS = $(am_ran_box_OBJECTS)
ran_box_LDADD = $(LDADD)
ran_box_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_ran_solvation_OBJECTS = ran_solvation.$(OBJEXT)
ran_solvation_OBJECTS = $(am_ran_solvation_OBJECTS)
ran_solvation_LDADD = $(LDADD)
ran_solvation_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rdf_OBJECTS = rdf.$(OBJEXT)
rdf_OBJECTS = $(am_rdf_OBJECTS)
rdf_LDADD = $(LDADD)
rdf_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_red_top_OBJECTS = red_top.$(OBJEXT)
red_top_OBJECTS = $(am_red_top_OBJECTS)
red_top_LDADD = $(LDADD)
red_top_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rep_ana_OBJECTS = rep_ana.$(OBJEXT)
rep_ana_OBJECTS = $(am_rep_ana_OBJECTS)
rep_ana_LDADD = $(LDADD)
rep_ana_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_reweight_OBJECTS = reweight.$(OBJEXT)
reweight_OBJECTS = $(am_reweight_OBJECTS)
reweight_LDADD = $(LDADD)
reweight_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rgyr_OBJECTS = rgyr.$(OBJEXT)
rgyr_OBJECTS = $(am_rgyr_OBJECTS)
rgyr_LDADD = $(LDADD)
rgyr_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rmsd_OBJECTS = rmsd.$(OBJEXT)
rmsd_OBJECTS = $(am_rmsd_OBJECTS)
rmsd_LDADD = $(LDADD)
rmsd_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rmsd_cmp_OBJECTS = rmsd_cmp.$(OBJEXT)
rmsd_cmp_OBJECTS = $(am_rmsd_cmp_OBJECTS)
rmsd_cmp_LDADD = $(LDADD)
rmsd_cmp_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rmsdmat_OBJECTS = rmsdmat.$(OBJEXT)
rmsdmat_OBJECTS = $(am_rmsdmat_OBJECTS)
rmsdmat_LDADD = $(LDADD)
rmsdmat_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rmsf_OBJECTS = rmsf.$(OBJEXT)
rmsf_OBJECTS = $(am_rmsf_OBJECTS)
rmsf_LDADD = $(LDADD)
rmsf_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_rot_rel_OBJECTS = rot_rel.$(OBJEXT)
rot_rel_OBJECTS = $(am_rot_rel_OBJECTS)
rot_rel_LDADD = $(LDADD)
rot_rel_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_sasa_OBJECTS = sasa.$(OBJEXT)
sasa_OBJECTS = $(am_sasa_OBJECTS)
sasa_LDADD = $(LDADD)
sasa_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_sasa_hasel_OBJECTS = sasa_hasel.$(OBJEXT)
sasa_hasel_OBJECTS = $(am_sasa_hasel_OBJECTS)
sasa_hasel_LDADD = $(LDADD)
sasa_hasel_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_shake_analysis_OBJECTS = shake_analysis.$(OBJEXT)
shake_analysis_OBJECTS = $(am_shake_analysis_OBJECTS)
shake_analysis_LDADD = $(LDADD)
shake_analysis_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_sim_box_OBJECTS = sim_box.$(OBJEXT)
sim_box_OBJECTS = $(am_sim_box_OBJECTS)
sim_box_LDADD = $(LDADD)
sim_box_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_solute_entropy_OBJECTS = solute_entropy.$(OBJEXT)
solute_entropy_OBJECTS = $(am_solute_entropy_OBJECTS)
solute_entropy_LDADD = $(LDADD)
solute_entropy_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_stat_ana_OBJECTS = stat_ana.$(OBJEXT)
stat_ana_OBJECTS = $(am_stat_ana_OBJECTS)
stat_ana_LDADD = $(LDADD)
stat_ana_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_structure_factor_OBJECTS = structure_factor.$(OBJEXT)
structure_factor_OBJECTS = $(am_structure_factor_OBJECTS)
structure_factor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
structure_factor_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(structure_factor_LDFLAGS) $(LDFLAGS) -o $@
am_swd_OBJECTS = swd.$(OBJEXT)
swd_OBJECTS = $(am_swd_OBJECTS)
swd_LDADD = $(LDADD)
swd_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_tcf_OBJECTS = tcf.$(OBJEXT)
tcf_OBJECTS = $(am_tcf_OBJECTS)
tcf_LDADD = $(LDADD)
tcf_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_temp_OBJECTS = temp.$(OBJEXT)
temp_OBJECTS = $(am_temp_OBJECTS)
temp_LDADD = $(LDADD)
temp_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_trs_ana_OBJECTS = trs_ana.$(OBJEXT)
trs_ana_OBJECTS = $(am_trs_ana_OBJECTS)
trs_ana_LDADD = $(LDADD)
trs_ana_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_tser_OBJECTS = tser.$(OBJEXT)
tser_OBJECTS = $(am_tser_OBJECTS)
tser_LDADD = $(LDADD)
tser_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_tstrip_OBJECTS = tstrip.$(OBJEXT)
tstrip_OBJECTS = $(am_tstrip_OBJECTS)
tstrip_LDADD = $(LDADD)
tstrip_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_unify_box_OBJECTS = unify_box.$(OBJEXT)
unify_box_OBJECTS = $(am_unify_box_OBJECTS)
unify_box_LDADD = $(LDADD)
unify_box_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_visco_OBJECTS = visco.$(OBJEXT)
visco_OBJECTS = $(am_visco_OBJECTS)
visco_LDADD = $(LDADD)
visco_DEPENDENCIES = $(top_builddir)/src/libgromos.la
am_xray_map_OBJECTS = xray_map.$(OBJEXT)
xray_map_OBJECTS = $(am_xray_map_OBJECTS)
xray_map_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(top_builddir)/src/libgromos.la
xray_map_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(xray_map_LDFLAGS) $(LDFLAGS) -o $@
am_xrayts_OBJECTS = xrayts.$(OBJEXT)
xrayts_OBJECTS = $(am_xrayts_OBJECTS)
xrayts_LDADD = $(LDADD)
xrayts_DEPENDENCIES = $(top_builddir)/src/libgromos.la
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(atominfo_SOURCES) $(bilayer_dist_SOURCES) \
	$(bilayer_oparam_SOURCES) $(bin_box_SOURCES) \
	$(build_box_SOURCES) $(check_box_SOURCES) $(check_top_SOURCES) \
	$(close_pair_SOURCES) $(cluster_SOURCES) $(cog_SOURCES) \
	$(com_top_SOURCES) $(con_top_SOURCES) $(copy_box_SOURCES) \
	$(cry_SOURCES) $(cry_rms_SOURCES) $(dGslv_pbsolv_SOURCES) \
	$(dfmult_SOURCES) $(dg_ener_SOURCES) $(diffus_SOURCES) \
	$(dipole_SOURCES) $(disicl_SOURCES) $(ditrans_SOURCES) \
	$(dssp_SOURCES) $(duplicate_SOURCES) $(eds_update_1_SOURCES) \
	$(eds_update_2_SOURCES) $(edyn_SOURCES) $(ene_ana_SOURCES) \
	$(ener_SOURCES) $(epath_SOURCES) $(eps_field_SOURCES) \
	$(epsilon_SOURCES) $(explode_SOURCES) $(filter_SOURCES) \
	$(follow_SOURCES) $(frameout_SOURCES) $(gathtraj_SOURCES) \
	$(gca_SOURCES) $(gch_SOURCES) $(hbond_SOURCES) \
	$(inbox_SOURCES) $(int_ener_SOURCES) $(ion_SOURCES) \
	$(iondens_SOURCES) $(jepot_SOURCES) $(jval_SOURCES) \
	$(link_top_SOURCES) $(m_widom_SOURCES) $(make_pt_top_SOURCES) \
	$(make_sasa_top_SOURCES) $(make_top_SOURCES) \
	$(matrix_overlap_SOURCES) $(mdf_SOURCES) $(mk_script_SOURCES) \
	$(nhoparam_SOURCES) $(noe_SOURCES) $(pairlist_SOURCES) \
	$(pdb2g96_SOURCES) $(pert_top_SOURCES) $(post_noe_SOURCES) \
	$(postcluster_SOURCES) $(predict_noe_SOURCES) \
	$(prep_eds_SOURCES) $(prep_noe_SOURCES) $(prep_xray_SOURCES) \
	$(prep_xray_le_SOURCES) $(pt_top_SOURCES) $(r_factor_SOURCES) \
	$(r_real_factor_SOURCES) $(ran_box_SOURCES) \
	$(ran_solvation_SOURCES) $(rdf_SOURCES) $(red_top_SOURCES) \
	$(rep_ana_SOURCES) $(reweight_SOURCES) $(rgyr_SOURCES) \
	$(rmsd_SOURCES) $(rmsd_cmp_SOURCES) $(rmsdmat_SOURCES) \
	$(rmsf_SOURCES) $(rot_rel_SOURCES) $(sasa_SOURCES) \
	$(sasa_hasel_SOURCES) $(shake_analysis_SOURCES) \
	$(sim_box_SOURCES) $(solute_entropy_SOURCES) \
	$(stat_ana_SOURCES) $(structure_factor_SOURCES) $(swd_SOURCES) \
	$(tcf_SOURCES) $(temp_SOURCES) $(trs_ana_SOURCES) \
	$(tser_SOURCES) $(tstrip_SOURCES) $(unify_box_SOURCES) \
	$(visco_SOURCES) $(xray_map_SOURCES) $(xrayts_SOURCES)
DIST_SOURCES = $(atominfo_SOURCES) $(bilayer_dist_SOURCES) \
	$(bilayer_oparam_SOURCES) $(bin_box_SOURCES) \
	$(build_box_SOURCES) $(check_box_SOURCES) $(check_top_SOURCES) \
	$(close_pair_SOURCES) $(cluster_SOURCES) $(cog_SOURCES) \
	$(com_top_SOURCES) $(con_top_SOURCES) $(copy_box_SOURCES) \
	$(cry_SOURCES) $(cry_rms_SOURCES) $(dGslv_pbsolv_SOURCES) \
	$(dfmult_SOURCES) $(dg_ener_SOURCES) $(diffus_SOURCES) \
	$(dipole_SOURCES) $(disicl_SOURCES) $(ditrans_SOURCES) \
	$(dssp_SOURCES) $(duplicate_SOURCES) $(eds_update_1_SOURCES) \
	$(eds_update_2_SOURCES) $(edyn_SOURCES) $(ene_ana_SOURCES) \
	$(ener_SOURCES) $(epath_SOURCES) $(eps_field_SOURCES) \
	$(epsilon_SOURCES) $(explode_SOURCES) $(filter_SOURCES) \
	$(follow_SOURCES) $(frameout_SOURCES) $(gathtraj_SOURCES) \
	$(gca_SOURCES) $(gch_SOURCES) $(hbond_SOURCES) \
	$(inbox_SOURCES) $(int_ener_SOURCES) $(ion_SOURCES) \
	$(iondens_SOURCES) $(jepot_SOURCES) $(jval_SOURCES) \
	$(link_top_SOURCES) $(m_widom_SOURCES) $(make_pt_top_SOURCES) \
	$(make_sasa_top_SOURCES) $(make_top_SOURCES) \
	$(matrix_overlap_SOURCES) $(mdf_SOURCES) $(mk_script_SOURCES) \
	$(nhoparam_SOURCES) $(noe_SOURCES) $(pairlist_SOURCES) \
	$(pdb2g96_SOURCES) $(pert_top_SOURCES) $(post_noe_SOURCES) \
	$(postcluster_SOURCES) $(predict_noe_SOURCES) \
	$(prep_eds_SOURCES) $(prep_noe_SOURCES) $(prep_xray_SOURCES) \
	$(prep_xray_le_SOURCES) $(pt_top_SOURCES) $(r_factor_SOURCES) \
	$(r_real_factor_SOURCES) $(ran_box_SOURCES) \
	$(ran_solvation_SOURCES) $(rdf_SOURCES) $(red_top_SOURCES) \
	$(rep_ana_SOURCES) $(reweight_SOURCES) $(rgyr_SOURCES) \
	$(rmsd_SOURCES) $(rmsd_cmp_SOURCES) $(rmsdmat_SOURCES) \
	$(rmsf_SOURCES) $(rot_rel_SOURCES) $(sasa_SOURCES) \
	$(sasa_hasel_SOURCES) $(shake_analysis_SOURCES) \
	$(sim_box_SOURCES) $(solute_entropy_SOURCES) \
	$(stat_ana_SOURCES) $(structure_factor_SOURCES) $(swd_SOURCES) \
	$(tcf_SOURCES) $(temp_SOURCES) $(trs_ana_SOURCES) \
	$(tser_SOURCES) $(tstrip_SOURCES) $(unify_box_SOURCES) \
	$(visco_SOURCES) $(xray_map_SOURCES) $(xrayts_SOURCES)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLIPPER_LIB = @CLIPPER_LIB@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GMX_LIB = @GMX_LIB@
GREP = @GREP@
GROMOS_MAJOR_VERSION = @GROMOS_MAJOR_VERSION@
GROMOS_MICRO_VERSION = @GROMOS_MICRO_VERSION@
GROMOS_MINOR_VERSION = @GROMOS_MINOR_VERSION@
GROMOS_VERSION = @GROMOS_VERSION@
GSL_LDFLAGS = @GSL_LDFLAGS@
GSL_LIB = @GSL_LIB@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LFS = @LFS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LSF = @LSF@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MDPP_LIB = @MDPP_LIB@
MKDIR_P = @MKDIR_P@
MY_CXXFLAGS = @MY_CXXFLAGS@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
lt_ECHO = @lt_ECHO@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# This is the programs automake template.
AM_CXXFLAGS = @MY_CXXFLAGS@
INCLUDES = -I$(top_srcdir)/src
include_HEADERS = mk_script.h
EXTRA_DIST = 0index.doxy
nhoparam_SOURCES = nhoparam.cc
frameout_SOURCES = frameout.cc
rmsd_SOURCES = rmsd.cc
pdb2g96_SOURCES = pdb2g96.cc
ener_SOURCES = ener.cc
dg_ener_SOURCES = dg_ener.cc
hbond_SOURCES = hbond.cc
noe_SOURCES = noe.cc
prep_noe_SOURCES = prep_noe.cc
post_noe_SOURCES = post_noe.cc
rgyr_SOURCES = rgyr.cc
tser_SOURCES = tser.cc
ditrans_SOURCES = ditrans.cc
diffus_SOURCES = diffus.cc
tstrip_SOURCES = tstrip.cc
temp_SOURCES = temp.cc
gathtraj_SOURCES = gathtraj.cc
edyn_SOURCES = edyn.cc
rmsf_SOURCES = rmsf.cc
dipole_SOURCES = dipole.cc
cluster_SOURCES = cluster.cc
rmsdmat_SOURCES = rmsdmat.cc
rmsd_cmp_SOURCES = rmsd_cmp.cc
postcluster_SOURCES = postcluster.cc
check_box_SOURCES = check_box.cc
make_top_SOURCES = make_top.cc
make_sasa_top_SOURCES = make_sasa_top.cc
con_top_SOURCES = con_top.cc
com_top_SOURCES = com_top.cc
red_top_SOURCES = red_top.cc
pt_top_SOURCES = pt_top.cc
link_top_SOURCES = link_top.cc
copy_box_SOURCES = copy_box.cc
build_box_SOURCES = build_box.cc
bin_box_SOURCES = bin_box.cc
ran_box_SOURCES = ran_box.cc
ran_solvation_SOURCES = ran_solvation.cc
pert_top_SOURCES = pert_top.cc
explode_SOURCES = explode.cc
rdf_SOURCES = rdf.cc
mdf_SOURCES = mdf.cc
iondens_SOURCES = iondens.cc
mk_script_SOURCES = mk_script.h mk_script.cc
check_top_SOURCES = check_top.cc
ene_ana_SOURCES = ene_ana.cc
int_ener_SOURCES = int_ener.cc
visco_SOURCES = visco.cc
epsilon_SOURCES = epsilon.cc
eps_field_SOURCES = eps_field.cc
gch_SOURCES = gch.cc
sim_box_SOURCES = sim_box.cc
ion_SOURCES = ion.cc
gca_SOURCES = gca.cc
dssp_SOURCES = dssp.cc
atominfo_SOURCES = atominfo.cc
shake_analysis_SOURCES = shake_analysis.cc
filter_SOURCES = filter.cc
follow_SOURCES = follow.cc
jval_SOURCES = jval.cc
jepot_SOURCES = jepot.cc
swd_SOURCES = swd.cc
sasa_SOURCES = sasa.cc
sasa_hasel_SOURCES = sasa_hasel.cc
tcf_SOURCES = tcf.cc
m_widom_SOURCES = m_widom.cc
cog_SOURCES = cog.cc
rot_rel_SOURCES = rot_rel.cc
inbox_SOURCES = inbox.cc
cry_SOURCES = cry.cc
unify_box_SOURCES = unify_box.cc
make_pt_top_SOURCES = make_pt_top.cc
solute_entropy_SOURCES = solute_entropy.cc
pairlist_SOURCES = pairlist.cc
prep_eds_SOURCES = prep_eds.cc
eds_update_1_SOURCES = eds_update_1.cc
eds_update_2_SOURCES = eds_update_2.cc
dfmult_SOURCES = dfmult.cc
reweight_SOURCES = reweight.cc
stat_ana_SOURCES = stat_ana.cc
bilayer_dist_SOURCES = bilayer_dist.cc
bilayer_oparam_SOURCES = bilayer_oparam.cc
rep_ana_SOURCES = rep_ana.cc
matrix_overlap_SOURCES = matrix_overlap.cc
close_pair_SOURCES = close_pair.cc
predict_noe_SOURCES = predict_noe.cc
prep_xray_SOURCES = prep_xray.cc
structure_factor_SOURCES = structure_factor.cc
xrayts_SOURCES = xrayts.cc
r_factor_SOURCES = r_factor.cc
xray_map_SOURCES = xray_map.cc
r_real_factor_SOURCES = r_real_factor.cc
prep_xray_le_SOURCES = prep_xray_le.cc
duplicate_SOURCES = duplicate.cc
cry_rms_SOURCES = cry_rms.cc
epath_SOURCES = epath.cc
disicl_SOURCES = disicl.cc
trs_ana_SOURCES = trs_ana.cc
dGslv_pbsolv_SOURCES = dGslv_pbsolv.cc
LDADD = $(top_builddir)/src/libgromos.la
cry_LDADD = $(CLIPPER_LIB) $(top_builddir)/src/libgromos.la
structure_factor_LDADD = $(CLIPPER_LIB) $(top_builddir)/src/libgromos.la
structure_factor_LDFLAGS = $(CLIPPER_LDFLAGS)
prep_xray_LDADD = $(CLIPPER_LIB) $(top_builddir)/src/libgromos.la
prep_xray_LDFLAGS = $(CLIPPER_LDFLAGS)
r_factor_LDADD = $(CLIPPER_LIB) $(top_builddir)/src/libgromos.la
r_factor_LDFLAGS = $(CLIPPER_LDFLAGS)
xray_map_LDADD = $(CLIPPER_LIB) $(top_builddir)/src/libgromos.la
xray_map_LDFLAGS = $(CLIPPER_LDFLAGS)
r_real_factor_LDADD = $(CLIPPER_LIB) $(top_builddir)/src/libgromos.la
r_real_factor_LDFLAGS = $(CLIPPER_LDFLAGS)
cry_rms_LDADD = $(CLIPPER_LIB) $(top_builddir)/src/libgromos.la
cry_rms_LDFLAGS = $(CLIPPER_LDFLAGS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu programs/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu programs/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p || test -f $$p1; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
atominfo$(EXEEXT): $(atominfo_OBJECTS) $(atominfo_DEPENDENCIES) 
	@rm -f atominfo$(EXEEXT)
	$(CXXLINK) $(atominfo_OBJECTS) $(atominfo_LDADD) $(LIBS)
bilayer_dist$(EXEEXT): $(bilayer_dist_OBJECTS) $(bilayer_dist_DEPENDENCIES) 
	@rm -f bilayer_dist$(EXEEXT)
	$(CXXLINK) $(bilayer_dist_OBJECTS) $(bilayer_dist_LDADD) $(LIBS)
bilayer_oparam$(EXEEXT): $(bilayer_oparam_OBJECTS) $(bilayer_oparam_DEPENDENCIES) 
	@rm -f bilayer_oparam$(EXEEXT)
	$(CXXLINK) $(bilayer_oparam_OBJECTS) $(bilayer_oparam_LDADD) $(LIBS)
bin_box$(EXEEXT): $(bin_box_OBJECTS) $(bin_box_DEPENDENCIES) 
	@rm -f bin_box$(EXEEXT)
	$(CXXLINK) $(bin_box_OBJECTS) $(bin_box_LDADD) $(LIBS)
build_box$(EXEEXT): $(build_box_OBJECTS) $(build_box_DEPENDENCIES) 
	@rm -f build_box$(EXEEXT)
	$(CXXLINK) $(build_box_OBJECTS) $(build_box_LDADD) $(LIBS)
check_box$(EXEEXT): $(check_box_OBJECTS) $(check_box_DEPENDENCIES) 
	@rm -f check_box$(EXEEXT)
	$(CXXLINK) $(check_box_OBJECTS) $(check_box_LDADD) $(LIBS)
check_top$(EXEEXT): $(check_top_OBJECTS) $(check_top_DEPENDENCIES) 
	@rm -f check_top$(EXEEXT)
	$(CXXLINK) $(check_top_OBJECTS) $(check_top_LDADD) $(LIBS)
close_pair$(EXEEXT): $(close_pair_OBJECTS) $(close_pair_DEPENDENCIES) 
	@rm -f close_pair$(EXEEXT)
	$(CXXLINK) $(close_pair_OBJECTS) $(close_pair_LDADD) $(LIBS)
cluster$(EXEEXT): $(cluster_OBJECTS) $(cluster_DEPENDENCIES) 
	@rm -f cluster$(EXEEXT)
	$(CXXLINK) $(cluster_OBJECTS) $(cluster_LDADD) $(LIBS)
cog$(EXEEXT): $(cog_OBJECTS) $(cog_DEPENDENCIES) 
	@rm -f cog$(EXEEXT)
	$(CXXLINK) $(cog_OBJECTS) $(cog_LDADD) $(LIBS)
com_top$(EXEEXT): $(com_top_OBJECTS) $(com_top_DEPENDENCIES) 
	@rm -f com_top$(EXEEXT)
	$(CXXLINK) $(com_top_OBJECTS) $(com_top_LDADD) $(LIBS)
con_top$(EXEEXT): $(con_top_OBJECTS) $(con_top_DEPENDENCIES) 
	@rm -f con_top$(EXEEXT)
	$(CXXLINK) $(con_top_OBJECTS) $(con_top_LDADD) $(LIBS)
copy_box$(EXEEXT): $(copy_box_OBJECTS) $(copy_box_DEPENDENCIES) 
	@rm -f copy_box$(EXEEXT)
	$(CXXLINK) $(copy_box_OBJECTS) $(copy_box_LDADD) $(LIBS)
cry$(EXEEXT): $(cry_OBJECTS) $(cry_DEPENDENCIES) 
	@rm -f cry$(EXEEXT)
	$(CXXLINK) $(cry_OBJECTS) $(cry_LDADD) $(LIBS)
cry_rms$(EXEEXT): $(cry_rms_OBJECTS) $(cry_rms_DEPENDENCIES) 
	@rm -f cry_rms$(EXEEXT)
	$(cry_rms_LINK) $(cry_rms_OBJECTS) $(cry_rms_LDADD) $(LIBS)
dGslv_pbsolv$(EXEEXT): $(dGslv_pbsolv_OBJECTS) $(dGslv_pbsolv_DEPENDENCIES) 
	@rm -f dGslv_pbsolv$(EXEEXT)
	$(CXXLINK) $(dGslv_pbsolv_OBJECTS) $(dGslv_pbsolv_LDADD) $(LIBS)
dfmult$(EXEEXT): $(dfmult_OBJECTS) $(dfmult_DEPENDENCIES) 
	@rm -f dfmult$(EXEEXT)
	$(CXXLINK) $(dfmult_OBJECTS) $(dfmult_LDADD) $(LIBS)
dg_ener$(EXEEXT): $(dg_ener_OBJECTS) $(dg_ener_DEPENDENCIES) 
	@rm -f dg_ener$(EXEEXT)
	$(CXXLINK) $(dg_ener_OBJECTS) $(dg_ener_LDADD) $(LIBS)
diffus$(EXEEXT): $(diffus_OBJECTS) $(diffus_DEPENDENCIES) 
	@rm -f diffus$(EXEEXT)
	$(CXXLINK) $(diffus_OBJECTS) $(diffus_LDADD) $(LIBS)
dipole$(EXEEXT): $(dipole_OBJECTS) $(dipole_DEPENDENCIES) 
	@rm -f dipole$(EXEEXT)
	$(CXXLINK) $(dipole_OBJECTS) $(dipole_LDADD) $(LIBS)
disicl$(EXEEXT): $(disicl_OBJECTS) $(disicl_DEPENDENCIES) 
	@rm -f disicl$(EXEEXT)
	$(CXXLINK) $(disicl_OBJECTS) $(disicl_LDADD) $(LIBS)
ditrans$(EXEEXT): $(ditrans_OBJECTS) $(ditrans_DEPENDENCIES) 
	@rm -f ditrans$(EXEEXT)
	$(CXXLINK) $(ditrans_OBJECTS) $(ditrans_LDADD) $(LIBS)
dssp$(EXEEXT): $(dssp_OBJECTS) $(dssp_DEPENDENCIES) 
	@rm -f dssp$(EXEEXT)
	$(CXXLINK) $(dssp_OBJECTS) $(dssp_LDADD) $(LIBS)
duplicate$(EXEEXT): $(duplicate_OBJECTS) $(duplicate_DEPENDENCIES) 
	@rm -f duplicate$(EXEEXT)
	$(CXXLINK) $(duplicate_OBJECTS) $(duplicate_LDADD) $(LIBS)
eds_update_1$(EXEEXT): $(eds_update_1_OBJECTS) $(eds_update_1_DEPENDENCIES) 
	@rm -f eds_update_1$(EXEEXT)
	$(CXXLINK) $(eds_update_1_OBJECTS) $(eds_update_1_LDADD) $(LIBS)
eds_update_2$(EXEEXT): $(eds_update_2_OBJECTS) $(eds_update_2_DEPENDENCIES) 
	@rm -f eds_update_2$(EXEEXT)
	$(CXXLINK) $(eds_update_2_OBJECTS) $(eds_update_2_LDADD) $(LIBS)
edyn$(EXEEXT): $(edyn_OBJECTS) $(edyn_DEPENDENCIES) 
	@rm -f edyn$(EXEEXT)
	$(CXXLINK) $(edyn_OBJECTS) $(edyn_LDADD) $(LIBS)
ene_ana$(EXEEXT): $(ene_ana_OBJECTS) $(ene_ana_DEPENDENCIES) 
	@rm -f ene_ana$(EXEEXT)
	$(CXXLINK) $(ene_ana_OBJECTS) $(ene_ana_LDADD) $(LIBS)
ener$(EXEEXT): $(ener_OBJECTS) $(ener_DEPENDENCIES) 
	@rm -f ener$(EXEEXT)
	$(CXXLINK) $(ener_OBJECTS) $(ener_LDADD) $(LIBS)
epath$(EXEEXT): $(epath_OBJECTS) $(epath_DEPENDENCIES) 
	@rm -f epath$(EXEEXT)
	$(CXXLINK) $(epath_OBJECTS) $(epath_LDADD) $(LIBS)
eps_field$(EXEEXT): $(eps_field_OBJECTS) $(eps_field_DEPENDENCIES) 
	@rm -f eps_field$(EXEEXT)
	$(CXXLINK) $(eps_field_OBJECTS) $(eps_field_LDADD) $(LIBS)
epsilon$(EXEEXT): $(epsilon_OBJECTS) $(epsilon_DEPENDENCIES) 
	@rm -f epsilon$(EXEEXT)
	$(CXXLINK) $(epsilon_OBJECTS) $(epsilon_LDADD) $(LIBS)
explode$(EXEEXT): $(explode_OBJECTS) $(explode_DEPENDENCIES) 
	@rm -f explode$(EXEEXT)
	$(CXXLINK) $(explode_OBJECTS) $(explode_LDADD) $(LIBS)
filter$(EXEEXT): $(filter_OBJECTS) $(filter_DEPENDENCIES) 
	@rm -f filter$(EXEEXT)
	$(CXXLINK) $(filter_OBJECTS) $(filter_LDADD) $(LIBS)
follow$(EXEEXT): $(follow_OBJECTS) $(follow_DEPENDENCIES) 
	@rm -f follow$(EXEEXT)
	$(CXXLINK) $(follow_OBJECTS) $(follow_LDADD) $(LIBS)
frameout$(EXEEXT): $(frameout_OBJECTS) $(frameout_DEPENDENCIES) 
	@rm -f frameout$(EXEEXT)
	$(CXXLINK) $(frameout_OBJECTS) $(frameout_LDADD) $(LIBS)
gathtraj$(EXEEXT): $(gathtraj_OBJECTS) $(gathtraj_DEPENDENCIES) 
	@rm -f gathtraj$(EXEEXT)
	$(CXXLINK) $(gathtraj_OBJECTS) $(gathtraj_LDADD) $(LIBS)
gca$(EXEEXT): $(gca_OBJECTS) $(gca_DEPENDENCIES) 
	@rm -f gca$(EXEEXT)
	$(CXXLINK) $(gca_OBJECTS) $(gca_LDADD) $(LIBS)
gch$(EXEEXT): $(gch_OBJECTS) $(gch_DEPENDENCIES) 
	@rm -f gch$(EXEEXT)
	$(CXXLINK) $(gch_OBJECTS) $(gch_LDADD) $(LIBS)
hbond$(EXEEXT): $(hbond_OBJECTS) $(hbond_DEPENDENCIES) 
	@rm -f hbond$(EXEEXT)
	$(CXXLINK) $(hbond_OBJECTS) $(hbond_LDADD) $(LIBS)
inbox$(EXEEXT): $(inbox_OBJECTS) $(inbox_DEPENDENCIES) 
	@rm -f inbox$(EXEEXT)
	$(CXXLINK) $(inbox_OBJECTS) $(inbox_LDADD) $(LIBS)
int_ener$(EXEEXT): $(int_ener_OBJECTS) $(int_ener_DEPENDENCIES) 
	@rm -f int_ener$(EXEEXT)
	$(CXXLINK) $(int_ener_OBJECTS) $(int_ener_LDADD) $(LIBS)
ion$(EXEEXT): $(ion_OBJECTS) $(ion_DEPENDENCIES) 
	@rm -f ion$(EXEEXT)
	$(CXXLINK) $(ion_OBJECTS) $(ion_LDADD) $(LIBS)
iondens$(EXEEXT): $(iondens_OBJECTS) $(iondens_DEPENDENCIES) 
	@rm -f iondens$(EXEEXT)
	$(CXXLINK) $(iondens_OBJECTS) $(iondens_LDADD) $(LIBS)
jepot$(EXEEXT): $(jepot_OBJECTS) $(jepot_DEPENDENCIES) 
	@rm -f jepot$(EXEEXT)
	$(CXXLINK) $(jepot_OBJECTS) $(jepot_LDADD) $(LIBS)
jval$(EXEEXT): $(jval_OBJECTS) $(jval_DEPENDENCIES) 
	@rm -f jval$(EXEEXT)
	$(CXXLINK) $(jval_OBJECTS) $(jval_LDADD) $(LIBS)
link_top$(EXEEXT): $(link_top_OBJECTS) $(link_top_DEPENDENCIES) 
	@rm -f link_top$(EXEEXT)
	$(CXXLINK) $(link_top_OBJECTS) $(link_top_LDADD) $(LIBS)
m_widom$(EXEEXT): $(m_widom_OBJECTS) $(m_widom_DEPENDENCIES) 
	@rm -f m_widom$(EXEEXT)
	$(CXXLINK) $(m_widom_OBJECTS) $(m_widom_LDADD) $(LIBS)
make_pt_top$(EXEEXT): $(make_pt_top_OBJECTS) $(make_pt_top_DEPENDENCIES) 
	@rm -f make_pt_top$(EXEEXT)
	$(CXXLINK) $(make_pt_top_OBJECTS) $(make_pt_top_LDADD) $(LIBS)
make_sasa_top$(EXEEXT): $(make_sasa_top_OBJECTS) $(make_sasa_top_DEPENDENCIES) 
	@rm -f make_sasa_top$(EXEEXT)
	$(CXXLINK) $(make_sasa_top_OBJECTS) $(make_sasa_top_LDADD) $(LIBS)
make_top$(EXEEXT): $(make_top_OBJECTS) $(make_top_DEPENDENCIES) 
	@rm -f make_top$(EXEEXT)
	$(CXXLINK) $(make_top_OBJECTS) $(make_top_LDADD) $(LIBS)
matrix_overlap$(EXEEXT): $(matrix_overlap_OBJECTS) $(matrix_overlap_DEPENDENCIES) 
	@rm -f matrix_overlap$(EXEEXT)
	$(CXXLINK) $(matrix_overlap_OBJECTS) $(matrix_overlap_LDADD) $(LIBS)
mdf$(EXEEXT): $(mdf_OBJECTS) $(mdf_DEPENDENCIES) 
	@rm -f mdf$(EXEEXT)
	$(CXXLINK) $(mdf_OBJECTS) $(mdf_LDADD) $(LIBS)
mk_script$(EXEEXT): $(mk_script_OBJECTS) $(mk_script_DEPENDENCIES) 
	@rm -f mk_script$(EXEEXT)
	$(CXXLINK) $(mk_script_OBJECTS) $(mk_script_LDADD) $(LIBS)
nhoparam$(EXEEXT): $(nhoparam_OBJECTS) $(nhoparam_DEPENDENCIES) 
	@rm -f nhoparam$(EXEEXT)
	$(CXXLINK) $(nhoparam_OBJECTS) $(nhoparam_LDADD) $(LIBS)
noe$(EXEEXT): $(noe_OBJECTS) $(noe_DEPENDENCIES) 
	@rm -f noe$(EXEEXT)
	$(CXXLINK) $(noe_OBJECTS) $(noe_LDADD) $(LIBS)
pairlist$(EXEEXT): $(pairlist_OBJECTS) $(pairlist_DEPENDENCIES) 
	@rm -f pairlist$(EXEEXT)
	$(CXXLINK) $(pairlist_OBJECTS) $(pairlist_LDADD) $(LIBS)
pdb2g96$(EXEEXT): $(pdb2g96_OBJECTS) $(pdb2g96_DEPENDENCIES) 
	@rm -f pdb2g96$(EXEEXT)
	$(CXXLINK) $(pdb2g96_OBJECTS) $(pdb2g96_LDADD) $(LIBS)
pert_top$(EXEEXT): $(pert_top_OBJECTS) $(pert_top_DEPENDENCIES) 
	@rm -f pert_top$(EXEEXT)
	$(CXXLINK) $(pert_top_OBJECTS) $(pert_top_LDADD) $(LIBS)
post_noe$(EXEEXT): $(post_noe_OBJECTS) $(post_noe_DEPENDENCIES) 
	@rm -f post_noe$(EXEEXT)
	$(CXXLINK) $(post_noe_OBJECTS) $(post_noe_LDADD) $(LIBS)
postcluster$(EXEEXT): $(postcluster_OBJECTS) $(postcluster_DEPENDENCIES) 
	@rm -f postcluster$(EXEEXT)
	$(CXXLINK) $(postcluster_OBJECTS) $(postcluster_LDADD) $(LIBS)
predict_noe$(EXEEXT): $(predict_noe_OBJECTS) $(predict_noe_DEPENDENCIES) 
	@rm -f predict_noe$(EXEEXT)
	$(CXXLINK) $(predict_noe_OBJECTS) $(predict_noe_LDADD) $(LIBS)
prep_eds$(EXEEXT): $(prep_eds_OBJECTS) $(prep_eds_DEPENDENCIES) 
	@rm -f prep_eds$(EXEEXT)
	$(CXXLINK) $(prep_eds_OBJECTS) $(prep_eds_LDADD) $(LIBS)
prep_noe$(EXEEXT): $(prep_noe_OBJECTS) $(prep_noe_DEPENDENCIES) 
	@rm -f prep_noe$(EXEEXT)
	$(CXXLINK) $(prep_noe_OBJECTS) $(prep_noe_LDADD) $(LIBS)
prep_xray$(EXEEXT): $(prep_xray_OBJECTS) $(prep_xray_DEPENDENCIES) 
	@rm -f prep_xray$(EXEEXT)
	$(prep_xray_LINK) $(prep_xray_OBJECTS) $(prep_xray_LDADD) $(LIBS)
prep_xray_le$(EXEEXT): $(prep_xray_le_OBJECTS) $(prep_xray_le_DEPENDENCIES) 
	@rm -f prep_xray_le$(EXEEXT)
	$(CXXLINK) $(prep_xray_le_OBJECTS) $(prep_xray_le_LDADD) $(LIBS)
pt_top$(EXEEXT): $(pt_top_OBJECTS) $(pt_top_DEPENDENCIES) 
	@rm -f pt_top$(EXEEXT)
	$(CXXLINK) $(pt_top_OBJECTS) $(pt_top_LDADD) $(LIBS)
r_factor$(EXEEXT): $(r_factor_OBJECTS) $(r_factor_DEPENDENCIES) 
	@rm -f r_factor$(EXEEXT)
	$(r_factor_LINK) $(r_factor_OBJECTS) $(r_factor_LDADD) $(LIBS)
r_real_factor$(EXEEXT): $(r_real_factor_OBJECTS) $(r_real_factor_DEPENDENCIES) 
	@rm -f r_real_factor$(EXEEXT)
	$(r_real_factor_LINK) $(r_real_factor_OBJECTS) $(r_real_factor_LDADD) $(LIBS)
ran_box$(EXEEXT): $(ran_box_OBJECTS) $(ran_box_DEPENDENCIES) 
	@rm -f ran_box$(EXEEXT)
	$(CXXLINK) $(ran_box_OBJECTS) $(ran_box_LDADD) $(LIBS)
ran_solvation$(EXEEXT): $(ran_solvation_OBJECTS) $(ran_solvation_DEPENDENCIES) 
	@rm -f ran_solvation$(EXEEXT)
	$(CXXLINK) $(ran_solvation_OBJECTS) $(ran_solvation_LDADD) $(LIBS)
rdf$(EXEEXT): $(rdf_OBJECTS) $(rdf_DEPENDENCIES) 
	@rm -f rdf$(EXEEXT)
	$(CXXLINK) $(rdf_OBJECTS) $(rdf_LDADD) $(LIBS)
red_top$(EXEEXT): $(red_top_OBJECTS) $(red_top_DEPENDENCIES) 
	@rm -f red_top$(EXEEXT)
	$(CXXLINK) $(red_top_OBJECTS) $(red_top_LDADD) $(LIBS)
rep_ana$(EXEEXT): $(rep_ana_OBJECTS) $(rep_ana_DEPENDENCIES) 
	@rm -f rep_ana$(EXEEXT)
	$(CXXLINK) $(rep_ana_OBJECTS) $(rep_ana_LDADD) $(LIBS)
reweight$(EXEEXT): $(reweight_OBJECTS) $(reweight_DEPENDENCIES) 
	@rm -f reweight$(EXEEXT)
	$(CXXLINK) $(reweight_OBJECTS) $(reweight_LDADD) $(LIBS)
rgyr$(EXEEXT): $(rgyr_OBJECTS) $(rgyr_DEPENDENCIES) 
	@rm -f rgyr$(EXEEXT)
	$(CXXLINK) $(rgyr_OBJECTS) $(rgyr_LDADD) $(LIBS)
rmsd$(EXEEXT): $(rmsd_OBJECTS) $(rmsd_DEPENDENCIES) 
	@rm -f rmsd$(EXEEXT)
	$(CXXLINK) $(rmsd_OBJECTS) $(rmsd_LDADD) $(LIBS)
rmsd_cmp$(EXEEXT): $(rmsd_cmp_OBJECTS) $(rmsd_cmp_DEPENDENCIES) 
	@rm -f rmsd_cmp$(EXEEXT)
	$(CXXLINK) $(rmsd_cmp_OBJECTS) $(rmsd_cmp_LDADD) $(LIBS)
rmsdmat$(EXEEXT): $(rmsdmat_OBJECTS) $(rmsdmat_DEPENDENCIES) 
	@rm -f rmsdmat$(EXEEXT)
	$(CXXLINK) $(rmsdmat_OBJECTS) $(rmsdmat_LDADD) $(LIBS)
rmsf$(EXEEXT): $(rmsf_OBJECTS) $(rmsf_DEPENDENCIES) 
	@rm -f rmsf$(EXEEXT)
	$(CXXLINK) $(rmsf_OBJECTS) $(rmsf_LDADD) $(LIBS)
rot_rel$(EXEEXT): $(rot_rel_OBJECTS) $(rot_rel_DEPENDENCIES) 
	@rm -f rot_rel$(EXEEXT)
	$(CXXLINK) $(rot_rel_OBJECTS) $(rot_rel_LDADD) $(LIBS)
sasa$(EXEEXT): $(sasa_OBJECTS) $(sasa_DEPENDENCIES) 
	@rm -f sasa$(EXEEXT)
	$(CXXLINK) $(sasa_OBJECTS) $(sasa_LDADD) $(LIBS)
sasa_hasel$(EXEEXT): $(sasa_hasel_OBJECTS) $(sasa_hasel_DEPENDENCIES) 
	@rm -f sasa_hasel$(EXEEXT)
	$(CXXLINK) $(sasa_hasel_OBJECTS) $(sasa_hasel_LDADD) $(LIBS)
shake_analysis$(EXEEXT): $(shake_analysis_OBJECTS) $(shake_analysis_DEPENDENCIES) 
	@rm -f shake_analysis$(EXEEXT)
	$(CXXLINK) $(shake_analysis_OBJECTS) $(shake_analysis_LDADD) $(LIBS)
sim_box$(EXEEXT): $(sim_box_OBJECTS) $(sim_box_DEPENDENCIES) 
	@rm -f sim_box$(EXEEXT)
	$(CXXLINK) $(sim_box_OBJECTS) $(sim_box_LDADD) $(LIBS)
solute_entropy$(EXEEXT): $(solute_entropy_OBJECTS) $(solute_entropy_DEPENDENCIES) 
	@rm -f solute_entropy$(EXEEXT)
	$(CXXLINK) $(solute_entropy_OBJECTS) $(solute_entropy_LDADD) $(LIBS)
stat_ana$(EXEEXT): $(stat_ana_OBJECTS) $(stat_ana_DEPENDENCIES) 
	@rm -f stat_ana$(EXEEXT)
	$(CXXLINK) $(stat_ana_OBJECTS) $(stat_ana_LDADD) $(LIBS)
structure_factor$(EXEEXT): $(structure_factor_OBJECTS) $(structure_factor_DEPENDENCIES) 
	@rm -f structure_factor$(EXEEXT)
	$(structure_factor_LINK) $(structure_factor_OBJECTS) $(structure_factor_LDADD) $(LIBS)
swd$(EXEEXT): $(swd_OBJECTS) $(swd_DEPENDENCIES) 
	@rm -f swd$(EXEEXT)
	$(CXXLINK) $(swd_OBJECTS) $(swd_LDADD) $(LIBS)
tcf$(EXEEXT): $(tcf_OBJECTS) $(tcf_DEPENDENCIES) 
	@rm -f tcf$(EXEEXT)
	$(CXXLINK) $(tcf_OBJECTS) $(tcf_LDADD) $(LIBS)
temp$(EXEEXT): $(temp_OBJECTS) $(temp_DEPENDENCIES) 
	@rm -f temp$(EXEEXT)
	$(CXXLINK) $(temp_OBJECTS) $(temp_LDADD) $(LIBS)
trs_ana$(EXEEXT): $(trs_ana_OBJECTS) $(trs_ana_DEPENDENCIES) 
	@rm -f trs_ana$(EXEEXT)
	$(CXXLINK) $(trs_ana_OBJECTS) $(trs_ana_LDADD) $(LIBS)
tser$(EXEEXT): $(tser_OBJECTS) $(tser_DEPENDENCIES) 
	@rm -f tser$(EXEEXT)
	$(CXXLINK) $(tser_OBJECTS) $(tser_LDADD) $(LIBS)
tstrip$(EXEEXT): $(tstrip_OBJECTS) $(tstrip_DEPENDENCIES) 
	@rm -f tstrip$(EXEEXT)
	$(CXXLINK) $(tstrip_OBJECTS) $(tstrip_LDADD) $(LIBS)
unify_box$(EXEEXT): $(unify_box_OBJECTS) $(unify_box_DEPENDENCIES) 
	@rm -f unify_box$(EXEEXT)
	$(CXXLINK) $(unify_box_OBJECTS) $(unify_box_LDADD) $(LIBS)
visco$(EXEEXT): $(visco_OBJECTS) $(visco_DEPENDENCIES) 
	@rm -f visco$(EXEEXT)
	$(CXXLINK) $(visco_OBJECTS) $(visco_LDADD) $(LIBS)
xray_map$(EXEEXT): $(xray_map_OBJECTS) $(xray_map_DEPENDENCIES) 
	@rm -f xray_map$(EXEEXT)
	$(xray_map_LINK) $(xray_map_OBJECTS) $(xray_map_LDADD) $(LIBS)
xrayts$(EXEEXT): $(xrayts_OBJECTS) $(xrayts_DEPENDENCIES) 
	@rm -f xrayts$(EXEEXT)
	$(CXXLINK) $(xrayts_OBJECTS) $(xrayts_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/atominfo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bilayer_dist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bilayer_oparam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/bin_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/build_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/check_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/close_pair.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cluster.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/com_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/con_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/copy_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cry.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cry_rms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dGslv_pbsolv.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dfmult.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dg_ener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/diffus.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dipole.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/disicl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ditrans.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/dssp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/duplicate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eds_update_1.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eds_update_2.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/edyn.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ene_ana.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epath.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eps_field.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/epsilon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/explode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/follow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/frameout.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gathtraj.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gca.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/hbond.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/inbox.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/int_ener.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/iondens.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jepot.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/jval.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/link_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/m_widom.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make_pt_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make_sasa_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/make_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/matrix_overlap.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mdf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mk_script.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/nhoparam.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/noe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pairlist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pdb2g96.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pert_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/post_noe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/postcluster.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/predict_noe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prep_eds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prep_noe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prep_xray.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/prep_xray_le.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/pt_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/r_factor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/r_real_factor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ran_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ran_solvation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rdf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/red_top.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rep_ana.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/reweight.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rgyr.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rmsd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rmsd_cmp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rmsdmat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rmsf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/rot_rel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sasa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sasa_hasel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/shake_analysis.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/solute_entropy.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/stat_ana.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/structure_factor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/swd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/temp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/trs_ana.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tser.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tstrip.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/unify_box.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/visco.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xray_map.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/xrayts.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCXX_TRUE@	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(MKDIR_P) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(includedir)" || exit $$?; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; test -n "$(includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	test -n "$$files" || exit 0; \
	echo " ( cd '$(DESTDIR)$(includedir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(includedir)" && rm -f $$files

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-includeHEADERS install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
